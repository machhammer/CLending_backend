{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration_in_month",
          "type": "uint256"
        }
      ],
      "name": "applyForCredit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getApplications",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "confirmed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration_in_month",
              "type": "uint256"
            }
          ],
          "internalType": "struct CBorrow.Credit[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/machhammer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "4": "/Users/machhammer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "5": "contracts/CBorrow.sol"
  },
  "ast": {
    "absolutePath": "contracts/CBorrow.sol",
    "exportedSymbols": {
      "CBorrow": [
        162
      ],
      "Context": [
        1307
      ],
      "Ownable": [
        740
      ]
    },
    "id": 163,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:5"
      },
      {
        "absolutePath": "/Users/machhammer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 163,
        "sourceUnit": 741,
        "src": "58:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 740,
              "src": "133:7:5"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "133:7:5"
          }
        ],
        "canonicalName": "CBorrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 162,
        "linearizedBaseContracts": [
          162,
          740,
          1307
        ],
        "name": "CBorrow",
        "nameLocation": "122:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CBorrow.Credit",
            "id": 17,
            "members": [
              {
                "constant": false,
                "id": 6,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "179:2:5",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "171:10:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 5,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "171:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "borrower",
                "nameLocation": "199:8:5",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "191:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "191:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "225:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "217:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "217:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "confirmed",
                "nameLocation": "246:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "241:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 11,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "273:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "265:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 13,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "265:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "mutability": "mutable",
                "name": "duration_in_month",
                "nameLocation": "297:17:5",
                "nodeType": "VariableDeclaration",
                "scope": 17,
                "src": "292:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "292:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Credit",
            "nameLocation": "154:6:5",
            "nodeType": "StructDefinition",
            "scope": 162,
            "src": "147:174:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 20,
            "mutability": "mutable",
            "name": "applications_count",
            "nameLocation": "340:18:5",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "327:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "327:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 19,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "361:1:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "borrower_application",
            "nameLocation": "404:20:5",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "369:55:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$17_storage_$",
              "typeString": "mapping(bytes32 => struct CBorrow.Credit)"
            },
            "typeName": {
              "id": 24,
              "keyType": {
                "id": 21,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "369:26:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$17_storage_$",
                "typeString": "mapping(bytes32 => struct CBorrow.Credit)"
              },
              "valueType": {
                "id": 23,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 22,
                  "name": "Credit",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17,
                  "src": "388:6:5"
                },
                "referencedDeclaration": 17,
                "src": "388:6:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Credit_$17_storage_ptr",
                  "typeString": "struct CBorrow.Credit"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "applications",
            "nameLocation": "468:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "435:45:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 26,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "443:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "435:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 27,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "454:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "all_borrowers",
            "nameLocation": "504:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "486:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "486:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 31,
              "nodeType": "ArrayTypeName",
              "src": "486:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 35,
            "mutability": "mutable",
            "name": "all_ids",
            "nameLocation": "541:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "523:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 33,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "523:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 34,
              "nodeType": "ArrayTypeName",
              "src": "523:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 39,
            "mutability": "mutable",
            "name": "borrower_confirmed_amount",
            "nameLocation": "588:25:5",
            "nodeType": "VariableDeclaration",
            "scope": 162,
            "src": "555:58:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 38,
              "keyType": {
                "id": 36,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 37,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "574:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "723:395:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "751:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_CBorrow_$162",
                                      "typeString": "contract CBorrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_CBorrow_$162",
                                      "typeString": "contract CBorrow"
                                    }
                                  ],
                                  "id": 50,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "743:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 49,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "743:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "743:13:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "743:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 54,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "767:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "743:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 56,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "742:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682062616c616e6365",
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "776:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        },
                        "value": "Not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "733:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "733:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "733:64:5"
                },
                {
                  "assignments": [
                    61
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 61,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "815:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 109,
                      "src": "807:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 60,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "807:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 65,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "841:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "841:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 67,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "853:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 68,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "853:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 63,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "830:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "830:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "830:39:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 62,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "820:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "820:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "807:63:5"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 72,
                        "name": "borrower_application",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "880:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$17_storage_$",
                          "typeString": "mapping(bytes32 => struct CBorrow.Credit storage ref)"
                        }
                      },
                      "id": 74,
                      "indexExpression": {
                        "id": 73,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "901:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "880:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Credit_$17_storage",
                        "typeString": "struct CBorrow.Credit storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "914:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "expression": {
                            "id": 77,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "918:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "918:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 79,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43,
                          "src": "930:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "938:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 81,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "944:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "944:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 83,
                          "name": "duration_in_month",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45,
                          "src": "961:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 75,
                        "name": "Credit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "907:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Credit_$17_storage_ptr_$",
                          "typeString": "type(struct CBorrow.Credit storage pointer)"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "907:72:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Credit_$17_memory_ptr",
                        "typeString": "struct CBorrow.Credit memory"
                      }
                    },
                    "src": "880:99:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Credit_$17_storage",
                      "typeString": "struct CBorrow.Credit storage ref"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "880:99:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 90,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43,
                        "src": "1008:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 87,
                        "name": "applicant",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "989:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "989:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "989:26:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 96,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1044:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1044:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 93,
                        "name": "all_borrowers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1025:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 95,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1025:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1025:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1025:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61,
                        "src": "1078:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 100,
                        "name": "all_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "1065:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1065:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:16:5"
                },
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1091:20:5",
                    "subExpression": {
                      "id": 106,
                      "name": "applications_count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1091:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1091:20:5"
                }
              ]
            },
            "functionSelector": "a39d143b",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "applyForCredit",
            "nameLocation": "631:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nameLocation": "662:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "646:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:15:5",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "681:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "673:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "673:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45,
                  "mutability": "mutable",
                  "name": "duration_in_month",
                  "nameLocation": "694:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "689:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "689:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "645:67:5"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:0:5"
            },
            "scope": 162,
            "src": "622:496:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "1202:271:5",
              "statements": [
                {
                  "assignments": [
                    123
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123,
                      "mutability": "mutable",
                      "name": "c_list",
                      "nameLocation": "1228:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 160,
                      "src": "1212:22:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Credit_$17_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct CBorrow.Credit[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 121,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 120,
                            "name": "Credit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 17,
                            "src": "1212:6:5"
                          },
                          "referencedDeclaration": 17,
                          "src": "1212:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$17_storage_ptr",
                            "typeString": "struct CBorrow.Credit"
                          }
                        },
                        "id": 122,
                        "nodeType": "ArrayTypeName",
                        "src": "1212:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Credit_$17_storage_$dyn_storage_ptr",
                          "typeString": "struct CBorrow.Credit[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 130,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 128,
                        "name": "applications_count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1250:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1237:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Credit_$17_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct CBorrow.Credit memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 125,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 124,
                            "name": "Credit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 17,
                            "src": "1241:6:5"
                          },
                          "referencedDeclaration": 17,
                          "src": "1241:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$17_storage_ptr",
                            "typeString": "struct CBorrow.Credit"
                          }
                        },
                        "id": 126,
                        "nodeType": "ArrayTypeName",
                        "src": "1241:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Credit_$17_storage_$dyn_storage_ptr",
                          "typeString": "struct CBorrow.Credit[]"
                        }
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1237:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Credit_$17_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct CBorrow.Credit memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1212:57:5"
                },
                {
                  "body": {
                    "id": 156,
                    "nodeType": "Block",
                    "src": "1325:119:5",
                    "statements": [
                      {
                        "assignments": [
                          143
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 143,
                            "mutability": "mutable",
                            "name": "application",
                            "nameLocation": "1352:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 156,
                            "src": "1337:26:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_$17_storage_ptr",
                              "typeString": "struct CBorrow.Credit"
                            },
                            "typeName": {
                              "id": 142,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 141,
                                "name": "Credit",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 17,
                                "src": "1337:6:5"
                              },
                              "referencedDeclaration": 17,
                              "src": "1337:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Credit_$17_storage_ptr",
                                "typeString": "struct CBorrow.Credit"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 149,
                        "initialValue": {
                          "baseExpression": {
                            "id": 144,
                            "name": "borrower_application",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "1366:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$17_storage_$",
                              "typeString": "mapping(bytes32 => struct CBorrow.Credit storage ref)"
                            }
                          },
                          "id": 148,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 145,
                              "name": "all_ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1387:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 147,
                            "indexExpression": {
                              "id": 146,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "1395:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1387:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1366:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$17_storage",
                            "typeString": "struct CBorrow.Credit storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1337:61:5"
                      },
                      {
                        "expression": {
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 150,
                              "name": "c_list",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1410:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Credit_$17_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct CBorrow.Credit memory[] memory"
                              }
                            },
                            "id": 152,
                            "indexExpression": {
                              "id": 151,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 132,
                              "src": "1417:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1410:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_$17_memory_ptr",
                              "typeString": "struct CBorrow.Credit memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 153,
                            "name": "application",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "1422:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_$17_storage_ptr",
                              "typeString": "struct CBorrow.Credit storage pointer"
                            }
                          },
                          "src": "1410:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$17_memory_ptr",
                            "typeString": "struct CBorrow.Credit memory"
                          }
                        },
                        "id": 155,
                        "nodeType": "ExpressionStatement",
                        "src": "1410:23:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 135,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "1296:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 136,
                      "name": "applications_count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1300:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1296:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 157,
                  "initializationExpression": {
                    "assignments": [
                      132
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1289:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "1284:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1284:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 134,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1293:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1284:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1320:3:5",
                      "subExpression": {
                        "id": 138,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1320:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 140,
                    "nodeType": "ExpressionStatement",
                    "src": "1320:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "1279:165:5"
                },
                {
                  "expression": {
                    "id": 158,
                    "name": "c_list",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 123,
                    "src": "1460:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Credit_$17_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct CBorrow.Credit memory[] memory"
                    }
                  },
                  "functionReturnParameters": 118,
                  "id": 159,
                  "nodeType": "Return",
                  "src": "1453:13:5"
                }
              ]
            },
            "functionSelector": "43900e78",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 113,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 112,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 683,
                  "src": "1160:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1160:9:5"
              }
            ],
            "name": "getApplications",
            "nameLocation": "1133:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1148:2:5"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 117,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "1184:15:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Credit_$17_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct CBorrow.Credit[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 115,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 114,
                        "name": "Credit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 17,
                        "src": "1184:6:5"
                      },
                      "referencedDeclaration": 17,
                      "src": "1184:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Credit_$17_storage_ptr",
                        "typeString": "struct CBorrow.Credit"
                      }
                    },
                    "id": 116,
                    "nodeType": "ArrayTypeName",
                    "src": "1184:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Credit_$17_storage_$dyn_storage_ptr",
                      "typeString": "struct CBorrow.Credit[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1183:17:5"
            },
            "scope": 162,
            "src": "1124:349:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 163,
        "src": "113:1362:5",
        "usedErrors": []
      }
    ],
    "src": "32:1443:5"
  },
  "bytecode": "6080604052600060015534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6106d6806100836000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806343900e781461005c578063715018a61461007a5780638da5cb5b14610084578063a39d143b1461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b6040516100719190610525565b60405180910390f35b61008261024b565b005b6000546040516001600160a01b039091168152602001610071565b6100826100ad3660046105bd565b610281565b6100826100c03660046105f2565b61043a565b6000546060906001600160a01b031633146100fb5760405162461bcd60e51b81526004016100f290610616565b60405180910390fd5b600060015467ffffffffffffffff8111156101185761011861064b565b60405190808252806020026020018201604052801561017857816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816101365790505b50905060005b60015481101561024557600060026000600584815481106101a1576101a1610661565b600091825260208083209091015483528281019390935260409182019020815160c0810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460ff161515606083015260048101546080830152600581015460a0830152845190925084908490811061022657610226610661565b602002602001018190525050808061023d90610677565b91505061017e565b50905090565b6000546001600160a01b031633146102755760405162461bcd60e51b81526004016100f290610616565b61027f60006104d5565b565b8147116102c55760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064016100f2565b60408051336020820152429181019190915260009060600160408051808303601f19018152828252805160209182012060c08401835280845233828501908152848401888152600160608701818152426080890190815260a089018b815260008781526002988990528981209a518b559551938a0180546001600160a01b0319166001600160a01b039586161790559351968901969096555160038801805460ff1916911515919091179055935160048701555160059095019490945591519193508616916108fc861502918691818181858888f193505050501580156103b0573d6000803e3d6000fd5b506004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319163317905560058054808301825560009182527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018390558154919061042f83610677565b919050555050505050565b6000546001600160a01b031633146104645760405162461bcd60e51b81526004016100f290610616565b6001600160a01b0381166104c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b6104d2816104d5565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602080825282518282018190526000919060409081850190868401855b8281101561059b57815180518552868101516001600160a01b03168786015285810151868601526060808201511515908601526080808201519086015260a0908101519085015260c09093019290850190600101610542565b5091979650505050505050565b6001600160a01b03811681146104d257600080fd5b6000806000606084860312156105d257600080fd5b83356105dd816105a8565b95602085013595506040909401359392505050565b60006020828403121561060457600080fd5b813561060f816105a8565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561069957634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212209fd2c79361fa080c23a62ca2cf943524e89049c6e7e5024409ae80f6419567b964736f6c634300080c0033",
  "bytecodeSha1": "f2465f4e024f8b29baa0cb749828a1ca72771866",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CBorrow",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "16": [
            1934,
            1956,
            true
          ]
        }
      },
      "4": {},
      "5": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "14": [
            2131,
            2148
          ],
          "15": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "12": [
            1926,
            1999
          ],
          "13": [
            2009,
            2028
          ]
        }
      },
      "4": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "5": {
        "CBorrow.applyForCredit": {
          "6": [
            733,
            797
          ],
          "7": [
            880,
            979
          ],
          "8": [
            989,
            1015
          ],
          "9": [
            1025,
            1055
          ],
          "10": [
            1065,
            1081
          ],
          "11": [
            1091,
            1111
          ]
        },
        "CBorrow.getApplications": {
          "2": [
            1410,
            1433
          ],
          "3": [
            1320,
            1323
          ],
          "4": [
            1453,
            1466
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806343900e781461005c578063715018a61461007a5780638da5cb5b14610084578063a39d143b1461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b6040516100719190610525565b60405180910390f35b61008261024b565b005b6000546040516001600160a01b039091168152602001610071565b6100826100ad3660046105bd565b610281565b6100826100c03660046105f2565b61043a565b6000546060906001600160a01b031633146100fb5760405162461bcd60e51b81526004016100f290610616565b60405180910390fd5b600060015467ffffffffffffffff8111156101185761011861064b565b60405190808252806020026020018201604052801561017857816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816101365790505b50905060005b60015481101561024557600060026000600584815481106101a1576101a1610661565b600091825260208083209091015483528281019390935260409182019020815160c0810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460ff161515606083015260048101546080830152600581015460a0830152845190925084908490811061022657610226610661565b602002602001018190525050808061023d90610677565b91505061017e565b50905090565b6000546001600160a01b031633146102755760405162461bcd60e51b81526004016100f290610616565b61027f60006104d5565b565b8147116102c55760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064016100f2565b60408051336020820152429181019190915260009060600160408051808303601f19018152828252805160209182012060c08401835280845233828501908152848401888152600160608701818152426080890190815260a089018b815260008781526002988990528981209a518b559551938a0180546001600160a01b0319166001600160a01b039586161790559351968901969096555160038801805460ff1916911515919091179055935160048701555160059095019490945591519193508616916108fc861502918691818181858888f193505050501580156103b0573d6000803e3d6000fd5b506004805460018181019092557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319163317905560058054808301825560009182527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0018390558154919061042f83610677565b919050555050505050565b6000546001600160a01b031633146104645760405162461bcd60e51b81526004016100f290610616565b6001600160a01b0381166104c95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b6104d2816104d5565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602080825282518282018190526000919060409081850190868401855b8281101561059b57815180518552868101516001600160a01b03168786015285810151868601526060808201511515908601526080808201519086015260a0908101519085015260c09093019290850190600101610542565b5091979650505050505050565b6001600160a01b03811681146104d257600080fd5b6000806000606084860312156105d257600080fd5b83356105dd816105a8565b95602085013595506040909401359392505050565b60006020828403121561060457600080fd5b813561060f816105a8565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561069957634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212209fd2c79361fa080c23a62ca2cf943524e89049c6e7e5024409ae80f6419567b964736f6c634300080c0033",
  "deployedSourceMap": "113:1362:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1124:349;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;:::i;:::-;;973:85;1019:7;1045:6;973:85;;-1:-1:-1;;;;;1045:6:0;;;1284:51:10;;1272:2;1257:18;973:85:0;1138:203:10;622:496:5;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;1124:349:5:-;1019:7:0;1045:6;1184:15:5;;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1212:22:5::1;1250:18;;1237:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1237:32:5;;-1:-1:-1;;1237:32:5;;;;::::1;::::0;::::1;;;;;;1212:57;;1284:6;1279:165;1300:18;;1296:1;:22;1279:165;;;1337:26;1366:20;:32;1387:7;1395:1;1387:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;1366:32;;;;::::1;::::0;;;;;;;;;;1410:23;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;1410:23:5::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;::::1;;;;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;:9;;1366:32;;-1:-1:-1;1410:6:5;;1417:1;;1410:9;::::1;;;;;:::i;:::-;;;;;;:23;;;;1325:119;1320:3;;;;;:::i;:::-;;;;1279:165;;;-1:-1:-1::0;1460:6:5;-1:-1:-1;1124:349:5;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;622:496:5:-;767:6;743:21;:30;733:64;;;;-1:-1:-1;;;733:64:5;;3218:2:10;733:64:5;;;3200:21:10;3257:2;3237:18;;;3230:30;-1:-1:-1;;;3276:18:10;;;3269:48;3334:18;;733:64:5;3016:342:10;733:64:5;830:39;;;841:10;830:39;;;3537:51:10;853:15:5;3604:18:10;;;3597:34;;;;807:10:5;;3510:18:10;;830:39:5;;;;;;-1:-1:-1;;830:39:5;;;;;;820:50;;830:39;820:50;;;;907:72;;;;;;;;918:10;907:72;;;;;;;;;;;;938:4;907:72;;;;;;944:15;907:72;;;;;;;;;;;;-1:-1:-1;880:24:5;;;:20;:24;;;;;;;:99;;;;;;;;;;;-1:-1:-1;;;;;;880:99:5;-1:-1:-1;;;;;880:99:5;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;880:99:5;;;;;;;;;;;;;;;;;;;;;;;;;989:26;;820:50;;-1:-1:-1;989:18:5;;;:26;;;;;907:72;;989:26;-1:-1:-1;989:26:5;907:72;989:18;:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1025:13:5;:30;;;;;;;;;;;;;-1:-1:-1;;;;;;1025:30:5;1044:10;1025:30;;;1065:7;:16;;;;;;;-1:-1:-1;1065:16:5;;;;;;;;1091:20;;;1025:30;1091:20;;;:::i;:::-;;;;;;723:395;622:496;;;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:4;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;3844:2:10;1926:73:0::1;::::0;::::1;3826:21:10::0;3883:2;3863:18;;;3856:30;3922:34;3902:18;;;3895:62;-1:-1:-1;;;3973:18:10;;;3966:36;4019:19;;1926:73:0::1;3642:402:10::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:1119:10:-;229:2;281:21;;;351:13;;254:18;;;373:22;;;200:4;;229:2;414;;432:18;;;;473:15;;;200:4;516:591;530:6;527:1;524:13;516:591;;;589:13;;627:9;;615:22;;681:11;;;675:18;-1:-1:-1;;;;;671:44:10;657:12;;;650:66;756:11;;;750:18;736:12;;;729:40;792:4;850:11;;;844:18;837:26;830:34;816:12;;;809:56;888:4;932:11;;;926:18;912:12;;;905:40;703:3;1012:11;;;1006:18;992:12;;;985:40;1054:4;1045:14;;;;1082:15;;;;712:1;545:9;516:591;;;-1:-1:-1;1124:3:10;;14:1119;-1:-1:-1;;;;;;;14:1119:10:o;1346:139::-;-1:-1:-1;;;;;1429:31:10;;1419:42;;1409:70;;1475:1;1472;1465:12;1490:399;1575:6;1583;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1699:9;1686:23;1718:39;1751:5;1718:39;:::i;:::-;1776:5;1828:2;1813:18;;1800:32;;-1:-1:-1;1879:2:10;1864:18;;;1851:32;;1490:399;-1:-1:-1;;;1490:399:10:o;1894:255::-;1953:6;2006:2;1994:9;1985:7;1981:23;1977:32;1974:52;;;2022:1;2019;2012:12;1974:52;2061:9;2048:23;2080:39;2113:5;2080:39;:::i;:::-;2138:5;1894:255;-1:-1:-1;;;1894:255:10:o;2154:356::-;2356:2;2338:21;;;2375:18;;;2368:30;2434:34;2429:2;2414:18;;2407:62;2501:2;2486:18;;2154:356::o;2515:127::-;2576:10;2571:3;2567:20;2564:1;2557:31;2607:4;2604:1;2597:15;2631:4;2628:1;2621:15;2647:127;2708:10;2703:3;2699:20;2696:1;2689:31;2739:4;2736:1;2729:15;2763:4;2760:1;2753:15;2779:232;2818:3;-1:-1:-1;;2839:17:10;;2836:140;;;2898:10;2893:3;2889:20;2886:1;2879:31;2933:4;2930:1;2923:15;2961:4;2958:1;2951:15;2836:140;-1:-1:-1;3003:1:10;2992:13;;2779:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    113,
    1475
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43900E78 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xA39D143B EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x24B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH2 0x82 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x5BD JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH2 0x82 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x5F2 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118 JUMPI PUSH2 0x118 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x178 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x136 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A1 JUMPI PUSH2 0x1A1 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP3 POP DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x226 JUMPI PUSH2 0x226 PUSH2 0x661 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x23D SWAP1 PUSH2 0x677 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17E JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH2 0x27F PUSH1 0x0 PUSH2 0x4D5 JUMP JUMPDEST JUMP JUMPDEST DUP2 SELFBALANCE GT PUSH2 0x2C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7420656E6F7567682062616C616E6365 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0xC0 DUP5 ADD DUP4 MSTORE DUP1 DUP5 MSTORE CALLER DUP3 DUP6 ADD SWAP1 DUP2 MSTORE DUP5 DUP5 ADD DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP10 ADD DUP12 DUP2 MSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x2 SWAP9 DUP10 SWAP1 MSTORE DUP10 DUP2 KECCAK256 SWAP11 MLOAD DUP12 SSTORE SWAP6 MLOAD SWAP4 DUP11 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SSTORE SWAP4 MLOAD SWAP7 DUP10 ADD SWAP7 SWAP1 SWAP7 SSTORE MLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP4 MLOAD PUSH1 0x4 DUP8 ADD SSTORE MLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 SSTORE SWAP2 MLOAD SWAP2 SWAP4 POP DUP7 AND SWAP2 PUSH2 0x8FC DUP7 ISZERO MUL SWAP2 DUP7 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP1 DUP4 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x42F DUP4 PUSH2 0x677 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x464 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x616 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x4D2 DUP2 PUSH2 0x4D5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x59B JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x542 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x5DD DUP2 PUSH2 0x5A8 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x60F DUP2 PUSH2 0x5A8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x699 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0xD2 0xC7 SWAP4 PUSH2 0xFA08 0xC 0x23 0xA6 0x2C LOG2 0xCF SWAP5 CALLDATALOAD 0x24 0xE8 SWAP1 0x49 0xC6 0xE7 0xE5 MUL DIFFICULTY MULMOD 0xAE DUP1 0xF6 COINBASE SWAP6 PUSH8 0xB964736F6C634300 ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        113,
        1475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "6": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "7": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "12": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "REVERT",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "17": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "POP",
      "path": "5"
    },
    "18": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "21": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "LT",
      "path": "5"
    },
    "22": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "29": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "SHR",
      "path": "5"
    },
    "32": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "33": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x43900E78"
    },
    "38": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "EQ",
      "path": "5"
    },
    "39": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "43": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "44": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "EQ",
      "path": "5"
    },
    "50": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7A"
    },
    "53": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "54": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "55": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "EQ",
      "path": "5"
    },
    "61": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x84"
    },
    "64": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "65": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "66": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA39D143B"
    },
    "71": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "EQ",
      "path": "5"
    },
    "72": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9F"
    },
    "75": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "76": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "77": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "EQ",
      "path": "5"
    },
    "83": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB2"
    },
    "86": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "87": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "88": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "DUP1",
      "path": "5"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        113,
        1475
      ],
      "op": "REVERT",
      "path": "5"
    },
    "92": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "93": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64"
    },
    "96": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC5"
    },
    "99": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1124,
        1473
      ],
      "op": "JUMP",
      "path": "5"
    },
    "100": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "101": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "103": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "104": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x71"
    },
    "107": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "108": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "109": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x525"
    },
    "112": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1124,
        1473
      ],
      "op": "JUMP",
      "path": "5"
    },
    "113": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "114": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "116": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "117": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "DUP1",
      "path": "5"
    },
    "118": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "119": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "SUB",
      "path": "5"
    },
    "120": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "121": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "RETURN",
      "path": "5"
    },
    "122": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "129": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "STOP",
      "path": "0"
    },
    "132": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "135": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "136": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "145": {
      "op": "SHL"
    },
    "146": {
      "op": "SUB"
    },
    "147": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "148": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "149": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "150": {
      "op": "DUP2"
    },
    "151": {
      "op": "MSTORE"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "154": {
      "op": "ADD"
    },
    "155": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "158": {
      "op": "JUMP"
    },
    "159": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "160": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x82"
    },
    "163": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAD"
    },
    "166": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "167": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "169": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5BD"
    },
    "172": {
      "fn": "CBorrow.applyForCredit",
      "jump": "i",
      "offset": [
        622,
        1118
      ],
      "op": "JUMP",
      "path": "5"
    },
    "173": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "174": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x281"
    },
    "177": {
      "fn": "CBorrow.applyForCredit",
      "jump": "i",
      "offset": [
        622,
        1118
      ],
      "op": "JUMP",
      "path": "5"
    },
    "178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "188": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F2"
    },
    "191": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43A"
    },
    "196": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "197": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "198": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "201": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1184,
        1199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "203": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1184,
        1199
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "210": {
      "op": "SHL"
    },
    "211": {
      "op": "SUB"
    },
    "212": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "213": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 1
    },
    "214": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "215": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "218": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "219": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "221": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "228": {
      "op": "SHL"
    },
    "229": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "230": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "231": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "233": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "234": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "237": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "238": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x616"
    },
    "241": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "245": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "246": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "247": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "248": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "249": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "250": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "251": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1212,
        1234
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "254": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1250,
        1268
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "256": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1250,
        1268
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "257": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH8",
      "path": "5",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "266": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "267": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "GT",
      "path": "5"
    },
    "268": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "269": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "272": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "273": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "276": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64B"
    },
    "279": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMP",
      "path": "5"
    },
    "280": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "281": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "283": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "284": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "285": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP1",
      "path": "5"
    },
    "286": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP3",
      "path": "5"
    },
    "287": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "288": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP1",
      "path": "5"
    },
    "289": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "291": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "MUL",
      "path": "5"
    },
    "292": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "294": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "ADD",
      "path": "5"
    },
    "295": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP3",
      "path": "5"
    },
    "296": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "ADD",
      "path": "5"
    },
    "297": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "299": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "300": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP1",
      "path": "5"
    },
    "301": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "302": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x178"
    },
    "305": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "306": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "307": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "309": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "ADD",
      "path": "5"
    },
    "310": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "313": {
      "op": "DUP1"
    },
    "314": {
      "op": "MLOAD"
    },
    "315": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "op": "DUP3"
    },
    "320": {
      "op": "MSTORE"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "323": {
      "op": "DUP1"
    },
    "324": {
      "op": "DUP3"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "DUP1"
    },
    "329": {
      "op": "DUP4"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "op": "DUP3"
    },
    "332": {
      "op": "SWAP1"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "SWAP3"
    },
    "335": {
      "op": "DUP3"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "DUP2"
    },
    "338": {
      "op": "SWAP1"
    },
    "339": {
      "op": "MSTORE"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "342": {
      "op": "DUP3"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "DUP2"
    },
    "345": {
      "op": "SWAP1"
    },
    "346": {
      "op": "MSTORE"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "349": {
      "op": "DUP3"
    },
    "350": {
      "op": "ADD"
    },
    "351": {
      "op": "DUP2"
    },
    "352": {
      "op": "SWAP1"
    },
    "353": {
      "op": "MSTORE"
    },
    "354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "356": {
      "op": "DUP3"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "op": "MSTORE"
    },
    "359": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP3",
      "path": "5"
    },
    "360": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "363": {
      "op": "NOT"
    },
    "364": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "365": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "366": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "ADD",
      "path": "5"
    },
    "367": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "368": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "ADD",
      "path": "5"
    },
    "369": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "DUP2",
      "path": "5"
    },
    "370": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x136"
    },
    "373": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "374": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "375": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "POP",
      "path": "5"
    },
    "376": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "377": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1237,
        1269
      ],
      "op": "POP",
      "path": "5"
    },
    "378": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1212,
        1269
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "379": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1212,
        1269
      ],
      "op": "POP",
      "path": "5"
    },
    "380": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1284,
        1290
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "382": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1279,
        1444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "383": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1300,
        1318
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "385": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1300,
        1318
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "386": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1296,
        1297
      ],
      "op": "DUP2",
      "path": "5"
    },
    "387": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1296,
        1318
      ],
      "op": "LT",
      "path": "5"
    },
    "388": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1279,
        1444
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "389": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1279,
        1444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x245"
    },
    "392": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1279,
        1444
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "393": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1337,
        1363
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "395": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1386
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "397": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "399": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1394
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "401": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1395,
        1396
      ],
      "op": "DUP5",
      "path": "5"
    },
    "402": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "403": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "404": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "DUP2",
      "path": "5"
    },
    "405": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "LT",
      "path": "5"
    },
    "406": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A1"
    },
    "409": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "410": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A1"
    },
    "413": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x661"
    },
    "416": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1387,
        1397
      ],
      "op": "JUMP",
      "path": "5"
    },
    "417": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "418": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "420": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "421": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "DUP3",
      "path": "5"
    },
    "422": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "423": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "425": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "DUP1",
      "path": "5"
    },
    "426": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "DUP4",
      "path": "5"
    },
    "427": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "428": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "429": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "430": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "ADD",
      "path": "5"
    },
    "431": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1387,
        1397
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "432": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP4",
      "path": "5"
    },
    "433": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "434": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "435": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP2",
      "path": "5"
    },
    "436": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "ADD",
      "path": "5"
    },
    "437": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "438": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "439": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "440": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "441": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "443": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "444": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "DUP3",
      "path": "5"
    },
    "445": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "ADD",
      "path": "5"
    },
    "446": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "447": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "448": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 2
    },
    "449": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "450": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xC0"
    },
    "452": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "453": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "454": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP4",
      "path": "5"
    },
    "455": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "456": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "457": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "458": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "459": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "460": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "462": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP3",
      "path": "5"
    },
    "463": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "464": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "471": {
      "op": "SHL"
    },
    "472": {
      "op": "SUB"
    },
    "473": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "AND",
      "path": "5"
    },
    "474": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "475": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "476": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "477": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "478": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "479": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "480": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "481": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "483": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "484": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "485": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "486": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "487": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP4",
      "path": "5"
    },
    "488": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "489": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "490": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "491": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "492": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "493": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "495": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "496": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "497": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "498": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "500": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "AND",
      "path": "5"
    },
    "501": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "502": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "503": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "505": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP4",
      "path": "5"
    },
    "506": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "507": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "508": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "510": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "511": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "512": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "513": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "515": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP4",
      "path": "5"
    },
    "516": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "517": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "518": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "520": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "521": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "522": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "523": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "525": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP4",
      "path": "5"
    },
    "526": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "ADD",
      "path": "5"
    },
    "527": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "528": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "DUP5",
      "path": "5"
    },
    "529": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "530": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "531": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1366,
        1398
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "532": {
      "op": "POP"
    },
    "533": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1416
      ],
      "op": "DUP5",
      "path": "5"
    },
    "534": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1416
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "535": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1417,
        1418
      ],
      "op": "DUP5",
      "path": "5"
    },
    "536": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1417,
        1418
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "537": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "DUP2",
      "path": "5"
    },
    "538": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "LT",
      "path": "5"
    },
    "539": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x226"
    },
    "542": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "543": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x226"
    },
    "546": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x661"
    },
    "549": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1410,
        1419
      ],
      "op": "JUMP",
      "path": "5"
    },
    "550": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "551": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "553": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "MUL",
      "path": "5"
    },
    "554": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "556": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "ADD",
      "path": "5"
    },
    "557": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1419
      ],
      "op": "ADD",
      "path": "5"
    },
    "558": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "DUP2",
      "path": "5"
    },
    "559": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "560": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "561": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1410,
        1433
      ],
      "op": "POP",
      "path": "5"
    },
    "562": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1325,
        1444
      ],
      "op": "POP",
      "path": "5"
    },
    "563": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 3
    },
    "564": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "DUP1",
      "path": "5"
    },
    "565": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23D"
    },
    "568": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "569": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x677"
    },
    "572": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1320,
        1323
      ],
      "op": "JUMP",
      "path": "5"
    },
    "573": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "574": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "575": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "POP",
      "path": "5"
    },
    "576": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1320,
        1323
      ],
      "op": "POP",
      "path": "5"
    },
    "577": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1279,
        1444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x17E"
    },
    "580": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1279,
        1444
      ],
      "op": "JUMP",
      "path": "5"
    },
    "581": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1279,
        1444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1460,
        1466
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 4
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1124,
        1473
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "586": {
      "fn": "CBorrow.getApplications",
      "jump": "o",
      "offset": [
        1124,
        1473
      ],
      "op": "JUMP",
      "path": "5"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "590": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "op": "SUB"
    },
    "599": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "600": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "601": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "602": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "605": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "608": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "617": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "620": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "621": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "624": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "625": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x616"
    },
    "628": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "629": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "630": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x27F"
    },
    "633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D5"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "641": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "642": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        773
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 6
    },
    "643": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        743,
        764
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "644": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        743,
        773
      ],
      "op": "GT",
      "path": "5"
    },
    "645": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C5"
    },
    "648": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "649": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "651": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "652": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "656": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "658": {
      "op": "SHL"
    },
    "659": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "DUP2",
      "path": "5"
    },
    "660": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "663": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "665": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "DUP3",
      "path": "5"
    },
    "666": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "ADD",
      "path": "5"
    },
    "667": {
      "op": "MSTORE"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "672": {
      "op": "DUP3"
    },
    "673": {
      "op": "ADD"
    },
    "674": {
      "op": "MSTORE"
    },
    "675": {
      "op": "PUSH18",
      "value": "0x4E6F7420656E6F7567682062616C616E6365"
    },
    "694": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "696": {
      "op": "SHL"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "699": {
      "op": "DUP3"
    },
    "700": {
      "op": "ADD"
    },
    "701": {
      "op": "MSTORE"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "704": {
      "op": "ADD"
    },
    "705": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF2"
    },
    "708": {
      "op": "JUMP"
    },
    "709": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        797
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "710": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "712": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP1",
      "path": "5"
    },
    "713": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "714": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        841,
        851
      ],
      "op": "CALLER",
      "path": "5"
    },
    "715": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "717": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP3",
      "path": "5"
    },
    "718": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "ADD",
      "path": "5"
    },
    "719": {
      "op": "MSTORE"
    },
    "720": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        868
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "721": {
      "op": "SWAP2"
    },
    "722": {
      "op": "DUP2"
    },
    "723": {
      "op": "ADD"
    },
    "724": {
      "op": "SWAP2"
    },
    "725": {
      "op": "SWAP1"
    },
    "726": {
      "op": "SWAP2"
    },
    "727": {
      "op": "MSTORE"
    },
    "728": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        807,
        817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "730": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        807,
        817
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "733": {
      "op": "ADD"
    },
    "734": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "736": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP1",
      "path": "5"
    },
    "737": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "738": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP1",
      "path": "5"
    },
    "739": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP4",
      "path": "5"
    },
    "740": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "SUB",
      "path": "5"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "743": {
      "op": "NOT"
    },
    "744": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "ADD",
      "path": "5"
    },
    "745": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP2",
      "path": "5"
    },
    "746": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "747": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP3",
      "path": "5"
    },
    "748": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "DUP3",
      "path": "5"
    },
    "749": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "750": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "DUP1",
      "path": "5"
    },
    "751": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "752": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        830,
        869
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "754": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "755": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "DUP3",
      "path": "5"
    },
    "756": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "ADD",
      "path": "5"
    },
    "757": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "758": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 7,
      "value": "0xC0"
    },
    "760": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP5",
      "path": "5"
    },
    "761": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "762": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP4",
      "path": "5"
    },
    "763": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "764": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP1",
      "path": "5"
    },
    "765": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP5",
      "path": "5"
    },
    "766": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "767": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        918,
        928
      ],
      "op": "CALLER",
      "path": "5"
    },
    "768": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP3",
      "path": "5"
    },
    "769": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP6",
      "path": "5"
    },
    "770": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "771": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "772": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "773": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "774": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP5",
      "path": "5"
    },
    "775": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP5",
      "path": "5"
    },
    "776": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "777": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP9",
      "path": "5"
    },
    "778": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "779": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "780": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        938,
        942
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "782": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x60"
    },
    "784": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP8",
      "path": "5"
    },
    "785": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "786": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "787": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "788": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "789": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        944,
        959
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "790": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "792": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP10",
      "path": "5"
    },
    "793": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "794": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "795": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "796": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "797": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA0"
    },
    "799": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP10",
      "path": "5"
    },
    "800": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "801": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP12",
      "path": "5"
    },
    "802": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP2",
      "path": "5"
    },
    "803": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "806": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "DUP8",
      "path": "5"
    },
    "807": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "DUP2",
      "path": "5"
    },
    "808": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "809": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        900
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "811": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "SWAP9",
      "path": "5"
    },
    "812": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "DUP10",
      "path": "5"
    },
    "813": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "814": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "815": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "DUP10",
      "path": "5"
    },
    "816": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "DUP2",
      "path": "5"
    },
    "817": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        904
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "818": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP11",
      "path": "5"
    },
    "819": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "820": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP12",
      "path": "5"
    },
    "821": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "822": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "823": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "824": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "825": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP11",
      "path": "5"
    },
    "826": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "827": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP1",
      "path": "5"
    },
    "828": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "op": "NOT"
    },
    "838": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "AND",
      "path": "5"
    },
    "839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "843": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "845": {
      "op": "SHL"
    },
    "846": {
      "op": "SUB"
    },
    "847": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "848": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP7",
      "path": "5"
    },
    "849": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "AND",
      "path": "5"
    },
    "850": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "OR",
      "path": "5"
    },
    "851": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "852": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "853": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "854": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "855": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "856": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP10",
      "path": "5"
    },
    "857": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "858": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "859": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "860": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "861": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "862": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "863": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x3"
    },
    "865": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP9",
      "path": "5"
    },
    "866": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "867": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP1",
      "path": "5"
    },
    "868": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "871": {
      "op": "NOT"
    },
    "872": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "AND",
      "path": "5"
    },
    "873": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "874": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "875": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "876": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "877": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "878": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "879": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "OR",
      "path": "5"
    },
    "880": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "881": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "882": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "883": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "884": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "886": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "DUP8",
      "path": "5"
    },
    "887": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "888": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "889": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "890": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "892": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "893": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP6",
      "path": "5"
    },
    "894": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "ADD",
      "path": "5"
    },
    "895": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "896": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "897": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "898": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        880,
        979
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "899": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "SWAP2",
      "path": "5",
      "statement": 8
    },
    "900": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "901": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "902": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        820,
        870
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "903": {
      "op": "POP"
    },
    "904": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1007
      ],
      "op": "DUP7",
      "path": "5"
    },
    "905": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1007
      ],
      "op": "AND",
      "path": "5"
    },
    "906": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1007
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "907": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "910": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "DUP7",
      "path": "5"
    },
    "911": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "912": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "MUL",
      "path": "5"
    },
    "913": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "914": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP7",
      "path": "5"
    },
    "915": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "916": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "DUP2",
      "path": "5"
    },
    "917": {
      "op": "DUP2"
    },
    "918": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "DUP2",
      "path": "5"
    },
    "919": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        907,
        979
      ],
      "op": "DUP6",
      "path": "5"
    },
    "920": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1007
      ],
      "op": "DUP9",
      "path": "5"
    },
    "921": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "DUP9",
      "path": "5"
    },
    "922": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "CALL",
      "path": "5"
    },
    "923": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "924": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "POP",
      "path": "5"
    },
    "925": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "POP",
      "path": "5"
    },
    "926": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "POP",
      "path": "5"
    },
    "927": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "POP",
      "path": "5"
    },
    "928": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "929": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "DUP1",
      "path": "5"
    },
    "930": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "931": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3B0"
    },
    "934": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "935": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "936": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "938": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "DUP1",
      "path": "5"
    },
    "939": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "940": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "941": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "943": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "REVERT",
      "path": "5"
    },
    "944": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        989,
        1015
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1038
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x4"
    },
    "948": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "949": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "950": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "952": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "953": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "DUP2",
      "path": "5"
    },
    "954": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "ADD",
      "path": "5"
    },
    "955": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "956": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "957": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "958": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "991": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "ADD",
      "path": "5"
    },
    "992": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "DUP1",
      "path": "5"
    },
    "993": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "SUB"
    },
    "1002": {
      "op": "NOT"
    },
    "1003": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "AND",
      "path": "5"
    },
    "1004": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1044,
        1054
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1005": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "OR",
      "path": "5"
    },
    "1006": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1007": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1008": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1072
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 10,
      "value": "0x5"
    },
    "1010": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1011": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1012": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1013": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1014": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "ADD",
      "path": "5"
    },
    "1015": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1016": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1019": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1020": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1021": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1022": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "1055": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "ADD",
      "path": "5"
    },
    "1056": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1057": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1058": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1065,
        1081
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1059": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 11
    },
    "1060": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1061": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1062": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1025,
        1055
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1063": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x42F"
    },
    "1066": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1067": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x677"
    },
    "1070": {
      "fn": "CBorrow.applyForCredit",
      "jump": "i",
      "offset": [
        1091,
        1111
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1071": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1072": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1073": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1074": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "POP",
      "path": "5"
    },
    "1075": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1076": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        1091,
        1111
      ],
      "op": "POP",
      "path": "5"
    },
    "1077": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        723,
        1118
      ],
      "op": "POP",
      "path": "5"
    },
    "1078": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "POP",
      "path": "5"
    },
    "1079": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "POP",
      "path": "5"
    },
    "1080": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        622,
        1118
      ],
      "op": "POP",
      "path": "5"
    },
    "1081": {
      "fn": "CBorrow.applyForCredit",
      "jump": "o",
      "offset": [
        622,
        1118
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1082": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1083": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1085": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1092": {
      "op": "SHL"
    },
    "1093": {
      "op": "SUB"
    },
    "1094": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1095": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1096": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1097": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x464"
    },
    "1100": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1101": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1103": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1104": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1110": {
      "op": "SHL"
    },
    "1111": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1112": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1113": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1115": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1116": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "1119": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1120": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x616"
    },
    "1123": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1124": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1131": {
      "op": "SHL"
    },
    "1132": {
      "op": "SUB"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 12
    },
    "1134": {
      "branch": 16,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "1135": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C9"
    },
    "1138": {
      "branch": 16,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1141": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1142": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1148": {
      "op": "SHL"
    },
    "1149": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1150": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1153": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1155": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1156": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "1157": {
      "op": "MSTORE"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1162": {
      "op": "DUP3"
    },
    "1163": {
      "op": "ADD"
    },
    "1164": {
      "op": "MSTORE"
    },
    "1165": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1200": {
      "op": "DUP3"
    },
    "1201": {
      "op": "ADD"
    },
    "1202": {
      "op": "MSTORE"
    },
    "1203": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "1224": {
      "op": "JUMP"
    },
    "1225": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1226": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x4D2"
    },
    "1229": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D5"
    },
    "1233": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1235": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "1236": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1237": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1238": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1240": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1241": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "op": "SUB"
    },
    "1250": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1251": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1252": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1257": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1259": {
      "op": "SHL"
    },
    "1260": {
      "op": "SUB"
    },
    "1261": {
      "op": "NOT"
    },
    "1262": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1263": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1264": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1265": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "1266": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1267": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1268": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0x40"
    },
    "1270": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1271": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1272": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1273": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1274": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1275": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1276": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1277": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1278": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1311": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1312": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1313": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1314": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1315": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1316": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1317": {
      "op": "JUMPDEST"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1320": {
      "op": "DUP1"
    },
    "1321": {
      "op": "DUP3"
    },
    "1322": {
      "op": "MSTORE"
    },
    "1323": {
      "op": "DUP3"
    },
    "1324": {
      "op": "MLOAD"
    },
    "1325": {
      "op": "DUP3"
    },
    "1326": {
      "op": "DUP3"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "op": "DUP2"
    },
    "1329": {
      "op": "SWAP1"
    },
    "1330": {
      "op": "MSTORE"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1333": {
      "op": "SWAP2"
    },
    "1334": {
      "op": "SWAP1"
    },
    "1335": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1337": {
      "op": "SWAP1"
    },
    "1338": {
      "op": "DUP2"
    },
    "1339": {
      "op": "DUP6"
    },
    "1340": {
      "op": "ADD"
    },
    "1341": {
      "op": "SWAP1"
    },
    "1342": {
      "op": "DUP7"
    },
    "1343": {
      "op": "DUP5"
    },
    "1344": {
      "op": "ADD"
    },
    "1345": {
      "op": "DUP6"
    },
    "1346": {
      "op": "JUMPDEST"
    },
    "1347": {
      "op": "DUP3"
    },
    "1348": {
      "op": "DUP2"
    },
    "1349": {
      "op": "LT"
    },
    "1350": {
      "op": "ISZERO"
    },
    "1351": {
      "op": "PUSH2",
      "value": "0x59B"
    },
    "1354": {
      "op": "JUMPI"
    },
    "1355": {
      "op": "DUP2"
    },
    "1356": {
      "op": "MLOAD"
    },
    "1357": {
      "op": "DUP1"
    },
    "1358": {
      "op": "MLOAD"
    },
    "1359": {
      "op": "DUP6"
    },
    "1360": {
      "op": "MSTORE"
    },
    "1361": {
      "op": "DUP7"
    },
    "1362": {
      "op": "DUP2"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "MLOAD"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1371": {
      "op": "SHL"
    },
    "1372": {
      "op": "SUB"
    },
    "1373": {
      "op": "AND"
    },
    "1374": {
      "op": "DUP8"
    },
    "1375": {
      "op": "DUP7"
    },
    "1376": {
      "op": "ADD"
    },
    "1377": {
      "op": "MSTORE"
    },
    "1378": {
      "op": "DUP6"
    },
    "1379": {
      "op": "DUP2"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MLOAD"
    },
    "1382": {
      "op": "DUP7"
    },
    "1383": {
      "op": "DUP7"
    },
    "1384": {
      "op": "ADD"
    },
    "1385": {
      "op": "MSTORE"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1388": {
      "op": "DUP1"
    },
    "1389": {
      "op": "DUP3"
    },
    "1390": {
      "op": "ADD"
    },
    "1391": {
      "op": "MLOAD"
    },
    "1392": {
      "op": "ISZERO"
    },
    "1393": {
      "op": "ISZERO"
    },
    "1394": {
      "op": "SWAP1"
    },
    "1395": {
      "op": "DUP7"
    },
    "1396": {
      "op": "ADD"
    },
    "1397": {
      "op": "MSTORE"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1400": {
      "op": "DUP1"
    },
    "1401": {
      "op": "DUP3"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "op": "MLOAD"
    },
    "1404": {
      "op": "SWAP1"
    },
    "1405": {
      "op": "DUP7"
    },
    "1406": {
      "op": "ADD"
    },
    "1407": {
      "op": "MSTORE"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SWAP1"
    },
    "1411": {
      "op": "DUP2"
    },
    "1412": {
      "op": "ADD"
    },
    "1413": {
      "op": "MLOAD"
    },
    "1414": {
      "op": "SWAP1"
    },
    "1415": {
      "op": "DUP6"
    },
    "1416": {
      "op": "ADD"
    },
    "1417": {
      "op": "MSTORE"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1420": {
      "op": "SWAP1"
    },
    "1421": {
      "op": "SWAP4"
    },
    "1422": {
      "op": "ADD"
    },
    "1423": {
      "op": "SWAP3"
    },
    "1424": {
      "op": "SWAP1"
    },
    "1425": {
      "op": "DUP6"
    },
    "1426": {
      "op": "ADD"
    },
    "1427": {
      "op": "SWAP1"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1430": {
      "op": "ADD"
    },
    "1431": {
      "op": "PUSH2",
      "value": "0x542"
    },
    "1434": {
      "op": "JUMP"
    },
    "1435": {
      "op": "JUMPDEST"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "op": "SWAP2"
    },
    "1438": {
      "op": "SWAP8"
    },
    "1439": {
      "op": "SWAP7"
    },
    "1440": {
      "op": "POP"
    },
    "1441": {
      "op": "POP"
    },
    "1442": {
      "op": "POP"
    },
    "1443": {
      "op": "POP"
    },
    "1444": {
      "op": "POP"
    },
    "1445": {
      "op": "POP"
    },
    "1446": {
      "op": "POP"
    },
    "1447": {
      "jump": "o",
      "op": "JUMP"
    },
    "1448": {
      "op": "JUMPDEST"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "SUB"
    },
    "1457": {
      "op": "DUP2"
    },
    "1458": {
      "op": "AND"
    },
    "1459": {
      "op": "DUP2"
    },
    "1460": {
      "op": "EQ"
    },
    "1461": {
      "op": "PUSH2",
      "value": "0x4D2"
    },
    "1464": {
      "op": "JUMPI"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1467": {
      "op": "DUP1"
    },
    "1468": {
      "op": "REVERT"
    },
    "1469": {
      "op": "JUMPDEST"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1472": {
      "op": "DUP1"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1477": {
      "op": "DUP5"
    },
    "1478": {
      "op": "DUP7"
    },
    "1479": {
      "op": "SUB"
    },
    "1480": {
      "op": "SLT"
    },
    "1481": {
      "op": "ISZERO"
    },
    "1482": {
      "op": "PUSH2",
      "value": "0x5D2"
    },
    "1485": {
      "op": "JUMPI"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1488": {
      "op": "DUP1"
    },
    "1489": {
      "op": "REVERT"
    },
    "1490": {
      "op": "JUMPDEST"
    },
    "1491": {
      "op": "DUP4"
    },
    "1492": {
      "op": "CALLDATALOAD"
    },
    "1493": {
      "op": "PUSH2",
      "value": "0x5DD"
    },
    "1496": {
      "op": "DUP2"
    },
    "1497": {
      "op": "PUSH2",
      "value": "0x5A8"
    },
    "1500": {
      "jump": "i",
      "op": "JUMP"
    },
    "1501": {
      "op": "JUMPDEST"
    },
    "1502": {
      "op": "SWAP6"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1505": {
      "op": "DUP6"
    },
    "1506": {
      "op": "ADD"
    },
    "1507": {
      "op": "CALLDATALOAD"
    },
    "1508": {
      "op": "SWAP6"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1512": {
      "op": "SWAP1"
    },
    "1513": {
      "op": "SWAP5"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "op": "CALLDATALOAD"
    },
    "1516": {
      "op": "SWAP4"
    },
    "1517": {
      "op": "SWAP3"
    },
    "1518": {
      "op": "POP"
    },
    "1519": {
      "op": "POP"
    },
    "1520": {
      "op": "POP"
    },
    "1521": {
      "jump": "o",
      "op": "JUMP"
    },
    "1522": {
      "op": "JUMPDEST"
    },
    "1523": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1527": {
      "op": "DUP3"
    },
    "1528": {
      "op": "DUP5"
    },
    "1529": {
      "op": "SUB"
    },
    "1530": {
      "op": "SLT"
    },
    "1531": {
      "op": "ISZERO"
    },
    "1532": {
      "op": "PUSH2",
      "value": "0x604"
    },
    "1535": {
      "op": "JUMPI"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1538": {
      "op": "DUP1"
    },
    "1539": {
      "op": "REVERT"
    },
    "1540": {
      "op": "JUMPDEST"
    },
    "1541": {
      "op": "DUP2"
    },
    "1542": {
      "op": "CALLDATALOAD"
    },
    "1543": {
      "op": "PUSH2",
      "value": "0x60F"
    },
    "1546": {
      "op": "DUP2"
    },
    "1547": {
      "op": "PUSH2",
      "value": "0x5A8"
    },
    "1550": {
      "jump": "i",
      "op": "JUMP"
    },
    "1551": {
      "op": "JUMPDEST"
    },
    "1552": {
      "op": "SWAP4"
    },
    "1553": {
      "op": "SWAP3"
    },
    "1554": {
      "op": "POP"
    },
    "1555": {
      "op": "POP"
    },
    "1556": {
      "op": "POP"
    },
    "1557": {
      "jump": "o",
      "op": "JUMP"
    },
    "1558": {
      "op": "JUMPDEST"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "DUP3"
    },
    "1563": {
      "op": "MSTORE"
    },
    "1564": {
      "op": "DUP2"
    },
    "1565": {
      "op": "DUP2"
    },
    "1566": {
      "op": "ADD"
    },
    "1567": {
      "op": "MSTORE"
    },
    "1568": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1603": {
      "op": "DUP3"
    },
    "1604": {
      "op": "ADD"
    },
    "1605": {
      "op": "MSTORE"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "op": "SWAP1"
    },
    "1610": {
      "jump": "o",
      "op": "JUMP"
    },
    "1611": {
      "op": "JUMPDEST"
    },
    "1612": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1617": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1619": {
      "op": "SHL"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1622": {
      "op": "MSTORE"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1627": {
      "op": "MSTORE"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1632": {
      "op": "REVERT"
    },
    "1633": {
      "op": "JUMPDEST"
    },
    "1634": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1644": {
      "op": "MSTORE"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1649": {
      "op": "MSTORE"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1654": {
      "op": "REVERT"
    },
    "1655": {
      "op": "JUMPDEST"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1660": {
      "op": "NOT"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "EQ"
    },
    "1663": {
      "op": "ISZERO"
    },
    "1664": {
      "op": "PUSH2",
      "value": "0x699"
    },
    "1667": {
      "op": "JUMPI"
    },
    "1668": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1683": {
      "op": "MSTORE"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1688": {
      "op": "REVERT"
    },
    "1689": {
      "op": "JUMPDEST"
    },
    "1690": {
      "op": "POP"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "ADD"
    },
    "1694": {
      "op": "SWAP1"
    },
    "1695": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cb8bc60ced0600fbd4e7d12ad7f4a161538a2ff5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract CBorrow is Ownable{\n\n    struct Credit {\n        bytes32 id;\n        address borrower;\n        uint256 amount;\n        bool confirmed;\n        uint256 timestamp;\n        uint duration_in_month;\n    }\n\n    uint private applications_count = 0;\n\n    mapping(bytes32 => Credit) private borrower_application;\n    \n    mapping(address => uint) private applications;\n    address[] private all_borrowers;\n    bytes32[] private all_ids;\n\n    mapping(address => uint) private borrower_confirmed_amount;\n\n\n\n    function applyForCredit(address payable applicant, uint256 amount, uint duration_in_month) external  {\n        require ((address(this).balance > amount), \"Not enough balance\");\n        bytes32 id = keccak256(abi.encode(msg.sender, block.timestamp));\n        borrower_application[id] = Credit(id, msg.sender, amount, true, block.timestamp, duration_in_month);\n        applicant.transfer(amount);\n        all_borrowers.push(msg.sender);\n        all_ids.push(id);\n        applications_count++;\n    }\n\n    function getApplications() external onlyOwner view returns (Credit[] memory)  {\n        Credit[] memory c_list = new Credit[](applications_count);\n        for (uint i = 0; i < applications_count; i++) {\n          Credit storage application = borrower_application[all_ids[i]];\n          c_list[i] = application;\n        }\n        return c_list;\n    }\n}",
  "sourceMap": "113:1362:5:-:0;;;361:1;327:35;;113:1362;;;;;;;;;-1:-1:-1;867:23:0;665:10:4;867:9:0;:23::i;:::-;113:1362:5;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;113:1362:5:-;;;;;;;",
  "sourcePath": "contracts/CBorrow.sol",
  "type": "contract"
}