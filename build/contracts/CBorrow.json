{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "applyForCredit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getApplications",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "confirmed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration_in_month",
              "type": "uint256"
            }
          ],
          "internalType": "struct CBorrow.Credit[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/machhammer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/Users/machhammer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "2": "contracts/CBorrow.sol"
  },
  "ast": {
    "absolutePath": "contracts/CBorrow.sol",
    "exportedSymbols": {
      "CBorrow": [
        313
      ],
      "Context": [
        334
      ],
      "Ownable": [
        172
      ]
    },
    "id": 314,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 174,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "/Users/machhammer/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 175,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 314,
        "sourceUnit": 173,
        "src": "58:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 176,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 172,
              "src": "133:7:2"
            },
            "id": 177,
            "nodeType": "InheritanceSpecifier",
            "src": "133:7:2"
          }
        ],
        "canonicalName": "CBorrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 313,
        "linearizedBaseContracts": [
          313,
          172,
          334
        ],
        "name": "CBorrow",
        "nameLocation": "122:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "CBorrow.Credit",
            "id": 190,
            "members": [
              {
                "constant": false,
                "id": 179,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "179:2:2",
                "nodeType": "VariableDeclaration",
                "scope": 190,
                "src": "171:10:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 178,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "171:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 181,
                "mutability": "mutable",
                "name": "borrower",
                "nameLocation": "199:8:2",
                "nodeType": "VariableDeclaration",
                "scope": 190,
                "src": "191:16:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 180,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "191:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 183,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "225:6:2",
                "nodeType": "VariableDeclaration",
                "scope": 190,
                "src": "217:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 182,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "217:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 185,
                "mutability": "mutable",
                "name": "confirmed",
                "nameLocation": "246:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 190,
                "src": "241:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 184,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "241:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 187,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "273:9:2",
                "nodeType": "VariableDeclaration",
                "scope": 190,
                "src": "265:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 186,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "265:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 189,
                "mutability": "mutable",
                "name": "duration_in_month",
                "nameLocation": "297:17:2",
                "nodeType": "VariableDeclaration",
                "scope": 190,
                "src": "292:22:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 188,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "292:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Credit",
            "nameLocation": "154:6:2",
            "nodeType": "StructDefinition",
            "scope": 313,
            "src": "147:174:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 193,
            "mutability": "mutable",
            "name": "applications_count",
            "nameLocation": "340:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 313,
            "src": "327:35:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 191,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "327:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 192,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "361:1:2",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 198,
            "mutability": "mutable",
            "name": "borrower_application",
            "nameLocation": "404:20:2",
            "nodeType": "VariableDeclaration",
            "scope": 313,
            "src": "369:55:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$190_storage_$",
              "typeString": "mapping(bytes32 => struct CBorrow.Credit)"
            },
            "typeName": {
              "id": 197,
              "keyType": {
                "id": 194,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "377:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "369:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$190_storage_$",
                "typeString": "mapping(bytes32 => struct CBorrow.Credit)"
              },
              "valueType": {
                "id": 196,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 195,
                  "name": "Credit",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 190,
                  "src": "388:6:2"
                },
                "referencedDeclaration": 190,
                "src": "388:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Credit_$190_storage_ptr",
                  "typeString": "struct CBorrow.Credit"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 202,
            "mutability": "mutable",
            "name": "applications",
            "nameLocation": "468:12:2",
            "nodeType": "VariableDeclaration",
            "scope": 313,
            "src": "435:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 201,
              "keyType": {
                "id": 199,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "443:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "435:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 200,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "454:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 205,
            "mutability": "mutable",
            "name": "all_borrowers",
            "nameLocation": "504:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 313,
            "src": "486:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 203,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "486:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 204,
              "nodeType": "ArrayTypeName",
              "src": "486:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 208,
            "mutability": "mutable",
            "name": "all_ids",
            "nameLocation": "541:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 313,
            "src": "523:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
              "typeString": "bytes32[]"
            },
            "typeName": {
              "baseType": {
                "id": 206,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "523:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 207,
              "nodeType": "ArrayTypeName",
              "src": "523:9:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                "typeString": "bytes32[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 212,
            "mutability": "mutable",
            "name": "borrower_confirmed_amount",
            "nameLocation": "588:25:2",
            "nodeType": "VariableDeclaration",
            "scope": 313,
            "src": "555:58:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 211,
              "keyType": {
                "id": 209,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 210,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "574:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 260,
              "nodeType": "Block",
              "src": "733:279:2",
              "statements": [
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "752:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 260,
                      "src": "744:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "744:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 230,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 224,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "778:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 225,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "788:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 226,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "798:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "798:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 222,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "767:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "767:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "767:47:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 221,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "757:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "757:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "744:71:2"
                },
                {
                  "expression": {
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 231,
                        "name": "borrower_application",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "826:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$190_storage_$",
                          "typeString": "mapping(bytes32 => struct CBorrow.Credit storage ref)"
                        }
                      },
                      "id": 233,
                      "indexExpression": {
                        "id": 232,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "847:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "826:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Credit_$190_storage",
                        "typeString": "struct CBorrow.Credit storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 235,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 220,
                          "src": "860:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 236,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 214,
                          "src": "864:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 237,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "874:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "882:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "expression": {
                            "id": 239,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "889:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "889:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "33",
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "906:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 234,
                        "name": "Credit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 190,
                        "src": "853:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Credit_$190_storage_ptr_$",
                          "typeString": "type(struct CBorrow.Credit storage pointer)"
                        }
                      },
                      "id": 242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "853:55:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Credit_$190_memory_ptr",
                        "typeString": "struct CBorrow.Credit memory"
                      }
                    },
                    "src": "826:82:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Credit_$190_storage",
                      "typeString": "struct CBorrow.Credit storage ref"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "826:82:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 248,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 214,
                        "src": "938:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 245,
                        "name": "all_borrowers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 205,
                        "src": "919:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "919:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "919:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "919:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 254,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "971:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 251,
                        "name": "all_ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "958:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "958:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "958:16:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "958:16:2"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "985:20:2",
                    "subExpression": {
                      "id": 257,
                      "name": "applications_count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "985:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "985:20:2"
                }
              ]
            },
            "functionSelector": "c5b2d967",
            "id": 261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "applyForCredit",
            "nameLocation": "675:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 214,
                  "mutability": "mutable",
                  "name": "borrower",
                  "nameLocation": "698:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "690:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "716:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 261,
                  "src": "708:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:34:2"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:2"
            },
            "scope": 313,
            "src": "666:346:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 311,
              "nodeType": "Block",
              "src": "1097:271:2",
              "statements": [
                {
                  "assignments": [
                    274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "c_list",
                      "nameLocation": "1123:6:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 311,
                      "src": "1107:22:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Credit_$190_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct CBorrow.Credit[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 272,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 271,
                            "name": "Credit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 190,
                            "src": "1107:6:2"
                          },
                          "referencedDeclaration": 190,
                          "src": "1107:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$190_storage_ptr",
                            "typeString": "struct CBorrow.Credit"
                          }
                        },
                        "id": 273,
                        "nodeType": "ArrayTypeName",
                        "src": "1107:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Credit_$190_storage_$dyn_storage_ptr",
                          "typeString": "struct CBorrow.Credit[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 281,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 279,
                        "name": "applications_count",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 193,
                        "src": "1145:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1132:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Credit_$190_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct CBorrow.Credit memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 276,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 275,
                            "name": "Credit",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 190,
                            "src": "1136:6:2"
                          },
                          "referencedDeclaration": 190,
                          "src": "1136:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$190_storage_ptr",
                            "typeString": "struct CBorrow.Credit"
                          }
                        },
                        "id": 277,
                        "nodeType": "ArrayTypeName",
                        "src": "1136:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Credit_$190_storage_$dyn_storage_ptr",
                          "typeString": "struct CBorrow.Credit[]"
                        }
                      }
                    },
                    "id": 280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Credit_$190_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct CBorrow.Credit memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1107:57:2"
                },
                {
                  "body": {
                    "id": 307,
                    "nodeType": "Block",
                    "src": "1220:119:2",
                    "statements": [
                      {
                        "assignments": [
                          294
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 294,
                            "mutability": "mutable",
                            "name": "application",
                            "nameLocation": "1247:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 307,
                            "src": "1232:26:2",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_$190_storage_ptr",
                              "typeString": "struct CBorrow.Credit"
                            },
                            "typeName": {
                              "id": 293,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 292,
                                "name": "Credit",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 190,
                                "src": "1232:6:2"
                              },
                              "referencedDeclaration": 190,
                              "src": "1232:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Credit_$190_storage_ptr",
                                "typeString": "struct CBorrow.Credit"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 300,
                        "initialValue": {
                          "baseExpression": {
                            "id": 295,
                            "name": "borrower_application",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "1261:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Credit_$190_storage_$",
                              "typeString": "mapping(bytes32 => struct CBorrow.Credit storage ref)"
                            }
                          },
                          "id": 299,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 296,
                              "name": "all_ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 208,
                              "src": "1282:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                                "typeString": "bytes32[] storage ref"
                              }
                            },
                            "id": 298,
                            "indexExpression": {
                              "id": 297,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1290:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1282:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1261:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$190_storage",
                            "typeString": "struct CBorrow.Credit storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1232:61:2"
                      },
                      {
                        "expression": {
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 301,
                              "name": "c_list",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "1305:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Credit_$190_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct CBorrow.Credit memory[] memory"
                              }
                            },
                            "id": 303,
                            "indexExpression": {
                              "id": 302,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1312:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1305:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_$190_memory_ptr",
                              "typeString": "struct CBorrow.Credit memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 304,
                            "name": "application",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "1317:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Credit_$190_storage_ptr",
                              "typeString": "struct CBorrow.Credit storage pointer"
                            }
                          },
                          "src": "1305:23:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Credit_$190_memory_ptr",
                            "typeString": "struct CBorrow.Credit memory"
                          }
                        },
                        "id": 306,
                        "nodeType": "ExpressionStatement",
                        "src": "1305:23:2"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 286,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "1191:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 287,
                      "name": "applications_count",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 193,
                      "src": "1195:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1191:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 308,
                  "initializationExpression": {
                    "assignments": [
                      283
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1184:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 308,
                        "src": "1179:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1179:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 285,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1188:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1179:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1215:3:2",
                      "subExpression": {
                        "id": 289,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 283,
                        "src": "1215:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 291,
                    "nodeType": "ExpressionStatement",
                    "src": "1215:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "1174:165:2"
                },
                {
                  "expression": {
                    "id": 309,
                    "name": "c_list",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 274,
                    "src": "1355:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Credit_$190_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct CBorrow.Credit memory[] memory"
                    }
                  },
                  "functionReturnParameters": 269,
                  "id": 310,
                  "nodeType": "Return",
                  "src": "1348:13:2"
                }
              ]
            },
            "functionSelector": "43900e78",
            "id": 312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 264,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 263,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 115,
                  "src": "1055:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1055:9:2"
              }
            ],
            "name": "getApplications",
            "nameLocation": "1028:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1043:2:2"
            },
            "returnParameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 312,
                  "src": "1079:15:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Credit_$190_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct CBorrow.Credit[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 266,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 265,
                        "name": "Credit",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 190,
                        "src": "1079:6:2"
                      },
                      "referencedDeclaration": 190,
                      "src": "1079:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Credit_$190_storage_ptr",
                        "typeString": "struct CBorrow.Credit"
                      }
                    },
                    "id": 267,
                    "nodeType": "ArrayTypeName",
                    "src": "1079:8:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Credit_$190_storage_$dyn_storage_ptr",
                      "typeString": "struct CBorrow.Credit[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1078:17:2"
            },
            "scope": 313,
            "src": "1019:349:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 314,
        "src": "113:1257:2",
        "usedErrors": []
      }
    ],
    "src": "32:1338:2"
  },
  "bytecode": "6080604052600060015534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61066f806100836000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806343900e781461005c578063715018a61461007a5780638da5cb5b14610084578063c5b2d9671461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b60405161007191906104c4565b60405180910390f35b61008261024b565b005b6000546040516001600160a01b039091168152602001610071565b6100826100ad366004610563565b610281565b6100826100c036600461058d565b6103d9565b6000546060906001600160a01b031633146100fb5760405162461bcd60e51b81526004016100f2906105af565b60405180910390fd5b600060015467ffffffffffffffff811115610118576101186105e4565b60405190808252806020026020018201604052801561017857816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816101365790505b50905060005b60015481101561024557600060026000600584815481106101a1576101a16105fa565b600091825260208083209091015483528281019390935260409182019020815160c0810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460ff161515606083015260048101546080830152600581015460a08301528451909250849084908110610226576102266105fa565b602002602001018190525050808061023d90610610565b91505061017e565b50905090565b6000546001600160a01b031633146102755760405162461bcd60e51b81526004016100f2906105af565b61027f6000610474565b565b604080516001600160a01b038416602082018190529181019190915242606082015260009060800160408051601f19818403018152828252805160209182012060c0840183528084526001600160a01b038088168584018181528686018981526000606089018181524260808b01908152600360a08c0181815289855260029a8b90529a84209b518c55945160018c81018054929099166001600160a01b0319928316179098559351988b019890985551928901805493151560ff19909416939093179092559451600480890191909155955160059788015585548084019096557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909501805490941617909255835480830185559383527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09093018390558054929350906103cf83610610565b9190505550505050565b6000546001600160a01b031633146104035760405162461bcd60e51b81526004016100f2906105af565b6001600160a01b0381166104685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b61047181610474565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602080825282518282018190526000919060409081850190868401855b8281101561053a57815180518552868101516001600160a01b03168786015285810151868601526060808201511515908601526080808201519086015260a0908101519085015260c090930192908501906001016104e1565b5091979650505050505050565b80356001600160a01b038116811461055e57600080fd5b919050565b6000806040838503121561057657600080fd5b61057f83610547565b946020939093013593505050565b60006020828403121561059f57600080fd5b6105a882610547565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561063257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220300735976316674c01ce6e18ed827faac0e8708798586d6926acb693c043a1e664736f6c634300080c0033",
  "bytecodeSha1": "cadd609bd59127a6bdf700c9b08c78453467fb66",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "CBorrow",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "14": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "12": [
            2131,
            2148
          ],
          "13": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "5": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "10": [
            1926,
            1999
          ],
          "11": [
            2009,
            2028
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "1": [
            658,
            675
          ]
        }
      },
      "2": {
        "CBorrow.applyForCredit": {
          "6": [
            826,
            908
          ],
          "7": [
            919,
            947
          ],
          "8": [
            958,
            974
          ],
          "9": [
            985,
            1005
          ]
        },
        "CBorrow.getApplications": {
          "2": [
            1305,
            1328
          ],
          "3": [
            1215,
            1218
          ],
          "4": [
            1348,
            1361
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806343900e781461005c578063715018a61461007a5780638da5cb5b14610084578063c5b2d9671461009f578063f2fde38b146100b2575b600080fd5b6100646100c5565b60405161007191906104c4565b60405180910390f35b61008261024b565b005b6000546040516001600160a01b039091168152602001610071565b6100826100ad366004610563565b610281565b6100826100c036600461058d565b6103d9565b6000546060906001600160a01b031633146100fb5760405162461bcd60e51b81526004016100f2906105af565b60405180910390fd5b600060015467ffffffffffffffff811115610118576101186105e4565b60405190808252806020026020018201604052801561017857816020015b6040805160c08101825260008082526020808301829052928201819052606082018190526080820181905260a082015282526000199092019101816101365790505b50905060005b60015481101561024557600060026000600584815481106101a1576101a16105fa565b600091825260208083209091015483528281019390935260409182019020815160c0810183528154815260018201546001600160a01b031693810193909352600281015491830191909152600381015460ff161515606083015260048101546080830152600581015460a08301528451909250849084908110610226576102266105fa565b602002602001018190525050808061023d90610610565b91505061017e565b50905090565b6000546001600160a01b031633146102755760405162461bcd60e51b81526004016100f2906105af565b61027f6000610474565b565b604080516001600160a01b038416602082018190529181019190915242606082015260009060800160408051601f19818403018152828252805160209182012060c0840183528084526001600160a01b038088168584018181528686018981526000606089018181524260808b01908152600360a08c0181815289855260029a8b90529a84209b518c55945160018c81018054929099166001600160a01b0319928316179098559351988b019890985551928901805493151560ff19909416939093179092559451600480890191909155955160059788015585548084019096557f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b909501805490941617909255835480830185559383527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db09093018390558054929350906103cf83610610565b9190505550505050565b6000546001600160a01b031633146104035760405162461bcd60e51b81526004016100f2906105af565b6001600160a01b0381166104685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f2565b61047181610474565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b602080825282518282018190526000919060409081850190868401855b8281101561053a57815180518552868101516001600160a01b03168786015285810151868601526060808201511515908601526080808201519086015260a0908101519085015260c090930192908501906001016104e1565b5091979650505050505050565b80356001600160a01b038116811461055e57600080fd5b919050565b6000806040838503121561057657600080fd5b61057f83610547565b946020939093013593505050565b60006020828403121561059f57600080fd5b6105a882610547565b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561063257634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220300735976316674c01ce6e18ed827faac0e8708798586d6926acb693c043a1e664736f6c634300080c0033",
  "deployedSourceMap": "113:1257:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:349;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1605:92:0;;;:::i;:::-;;973:85;1019:7;1045:6;973:85;;-1:-1:-1;;;;;1045:6:0;;;1286:51:5;;1274:2;1259:18;973:85:0;1140:203:5;666:346:2;;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;1019:349:2:-;:7:0;1045:6;1079:15:2;;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1107:22:2::1;1145:18;;1132:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1132:32:2;;-1:-1:-1;;1132:32:2;;;;::::1;::::0;::::1;;;;;;1107:57;;1179:6;1174:165;1195:18;;1191:1;:22;1174:165;;;1232:26;1261:20;:32;1282:7;1290:1;1282:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;::::0;1261:32;;;;::::1;::::0;;;;;;;;;;1305:23;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;1305:23:2::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;::::1;;;;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;:9;;1261:32;;-1:-1:-1;1305:6:2;;1312:1;;1305:9;::::1;;;;;:::i;:::-;;;;;;:23;;;;1220:119;1215:3;;;;;:::i;:::-;;;;1174:165;;;-1:-1:-1::0;1355:6:2;-1:-1:-1;1019:349:2;:::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;666:346:2:-;767:47;;;-1:-1:-1;;;;;3096:15:5;;767:47:2;;;3078:34:5;;;3128:18;;;3121:43;;;;798:15:2;3180:18:5;;;3173:34;744:10:2;;3013:18:5;;767:47:2;;;-1:-1:-1;;767:47:2;;;;;;;;;757:58;;767:47;757:58;;;;853:55;;;;;;;;-1:-1:-1;;;;;853:55:2;;;;;;;;;;;;;;;-1:-1:-1;853:55:2;;;;;;889:15;853:55;;;;;;906:1;853:55;;;;;;826:24;;;:20;:24;;;;;;;:82;;;;;;853:55;826:82;;;;;;;;;-1:-1:-1;;;;;;826:82:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;826:82:2;;;;;;;;;;;;;;;;;;;;;;;;;;;919:28;;;;;;;;;;;;;;;;;;;;;958:16;;;;;;;;;;;;;;;;;985:20;;757:58;;-1:-1:-1;853:55:2;985:20;;;:::i;:::-;;;;;;733:279;666:346;;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:1;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;3420:2:5;1926:73:0::1;::::0;::::1;3402:21:5::0;3459:2;3439:18;;;3432:30;3498:34;3478:18;;;3471:62;-1:-1:-1;;;3549:18:5;;;3542:36;3595:19;;1926:73:0::1;3218:402:5::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2041:169::-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:1121:5:-;231:2;283:21;;;353:13;;256:18;;;375:22;;;202:4;;231:2;416;;434:18;;;;475:15;;;202:4;518:591;532:6;529:1;526:13;518:591;;;591:13;;629:9;;617:22;;683:11;;;677:18;-1:-1:-1;;;;;673:44:5;659:12;;;652:66;758:11;;;752:18;738:12;;;731:40;794:4;852:11;;;846:18;839:26;832:34;818:12;;;811:56;890:4;934:11;;;928:18;914:12;;;907:40;705:3;1014:11;;;1008:18;994:12;;;987:40;1056:4;1047:14;;;;1084:15;;;;714:1;547:9;518:591;;;-1:-1:-1;1126:3:5;;14:1121;-1:-1:-1;;;;;;;14:1121:5:o;1348:173::-;1416:20;;-1:-1:-1;;;;;1465:31:5;;1455:42;;1445:70;;1511:1;1508;1501:12;1445:70;1348:173;;;:::o;1526:254::-;1594:6;1602;1655:2;1643:9;1634:7;1630:23;1626:32;1623:52;;;1671:1;1668;1661:12;1623:52;1694:29;1713:9;1694:29;:::i;:::-;1684:39;1770:2;1755:18;;;;1742:32;;-1:-1:-1;;;1526:254:5:o;1785:186::-;1844:6;1897:2;1885:9;1876:7;1872:23;1868:32;1865:52;;;1913:1;1910;1903:12;1865:52;1936:29;1955:9;1936:29;:::i;:::-;1926:39;1785:186;-1:-1:-1;;;1785:186:5:o;1976:356::-;2178:2;2160:21;;;2197:18;;;2190:30;2256:34;2251:2;2236:18;;2229:62;2323:2;2308:18;;1976:356::o;2337:127::-;2398:10;2393:3;2389:20;2386:1;2379:31;2429:4;2426:1;2419:15;2453:4;2450:1;2443:15;2469:127;2530:10;2525:3;2521:20;2518:1;2511:31;2561:4;2558:1;2551:15;2585:4;2582:1;2575:15;2601:232;2640:3;-1:-1:-1;;2661:17:5;;2658:140;;;2720:10;2715:3;2711:20;2708:1;2701:31;2755:4;2752:1;2745:15;2783:4;2780:1;2773:15;2658:140;-1:-1:-1;2825:1:5;2814:13;;2601:232::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    113,
    1370
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x43900E78 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xC5B2D967 EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x4C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x24B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x71 JUMP JUMPDEST PUSH2 0x82 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x563 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST PUSH2 0x82 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x118 JUMPI PUSH2 0x118 PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x178 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 ADD DUP2 PUSH2 0x136 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x245 JUMPI PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A1 JUMPI PUSH2 0x1A1 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 MSTORE DUP3 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP5 MLOAD SWAP1 SWAP3 POP DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x226 JUMPI PUSH2 0x226 PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP DUP1 DUP1 PUSH2 0x23D SWAP1 PUSH2 0x610 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17E JUMP JUMPDEST POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x275 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x27F PUSH1 0x0 PUSH2 0x474 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0xC0 DUP5 ADD DUP4 MSTORE DUP1 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND DUP6 DUP5 ADD DUP2 DUP2 MSTORE DUP7 DUP7 ADD DUP10 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP10 ADD DUP2 DUP2 MSTORE TIMESTAMP PUSH1 0x80 DUP12 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xA0 DUP13 ADD DUP2 DUP2 MSTORE DUP10 DUP6 MSTORE PUSH1 0x2 SWAP11 DUP12 SWAP1 MSTORE SWAP11 DUP5 KECCAK256 SWAP12 MLOAD DUP13 SSTORE SWAP5 MLOAD PUSH1 0x1 DUP13 DUP2 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP9 SSTORE SWAP4 MLOAD SWAP9 DUP12 ADD SWAP9 SWAP1 SWAP9 SSTORE MLOAD SWAP3 DUP10 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE SWAP5 MLOAD PUSH1 0x4 DUP1 DUP10 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP6 MLOAD PUSH1 0x5 SWAP8 DUP9 ADD SSTORE DUP6 SLOAD DUP1 DUP5 ADD SWAP1 SWAP7 SSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 SWAP6 ADD DUP1 SLOAD SWAP1 SWAP5 AND OR SWAP1 SWAP3 SSTORE DUP4 SLOAD DUP1 DUP4 ADD DUP6 SSTORE SWAP4 DUP4 MSTORE PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 SWAP1 SWAP4 ADD DUP4 SWAP1 SSTORE DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 PUSH2 0x3CF DUP4 PUSH2 0x610 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x403 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF2 JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x474 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x53A JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 DUP7 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4E1 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x55E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x576 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x57F DUP4 PUSH2 0x547 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x59F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A8 DUP3 PUSH2 0x547 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x632 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SMOD CALLDATALOAD SWAP8 PUSH4 0x16674C01 0xCE PUSH15 0x18ED827FAAC0E8708798586D6926AC 0xB6 SWAP4 0xC0 NUMBER LOG1 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        113,
        1370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x43900E78"
    },
    "38": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "EQ",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "EQ",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7A"
    },
    "53": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84"
    },
    "64": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC5B2D967"
    },
    "71": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F"
    },
    "75": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2"
    },
    "86": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        113,
        1370
      ],
      "op": "REVERT",
      "path": "2"
    },
    "92": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "93": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64"
    },
    "96": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC5"
    },
    "99": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1019,
        1368
      ],
      "op": "JUMP",
      "path": "2"
    },
    "100": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "101": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "103": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "104": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71"
    },
    "107": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "108": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "109": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4C4"
    },
    "112": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1019,
        1368
      ],
      "op": "JUMP",
      "path": "2"
    },
    "113": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "114": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "116": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "117": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "DUP1",
      "path": "2"
    },
    "118": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "119": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "SUB",
      "path": "2"
    },
    "120": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "121": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "RETURN",
      "path": "2"
    },
    "122": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "123": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "126": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x24B"
    },
    "129": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "130": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "131": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "STOP",
      "path": "0"
    },
    "132": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "133": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "135": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "136": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "145": {
      "op": "SHL"
    },
    "146": {
      "op": "SUB"
    },
    "147": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "148": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "149": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "150": {
      "op": "DUP2"
    },
    "151": {
      "op": "MSTORE"
    },
    "152": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "154": {
      "op": "ADD"
    },
    "155": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71"
    },
    "158": {
      "op": "JUMP"
    },
    "159": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "160": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82"
    },
    "163": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAD"
    },
    "166": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "167": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "169": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x563"
    },
    "172": {
      "fn": "CBorrow.applyForCredit",
      "jump": "i",
      "offset": [
        666,
        1012
      ],
      "op": "JUMP",
      "path": "2"
    },
    "173": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "174": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "177": {
      "fn": "CBorrow.applyForCredit",
      "jump": "i",
      "offset": [
        666,
        1012
      ],
      "op": "JUMP",
      "path": "2"
    },
    "178": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "179": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82"
    },
    "182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0"
    },
    "185": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "188": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58D"
    },
    "191": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "193": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3D9"
    },
    "196": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "197": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "198": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "200": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "201": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1079,
        1094
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "203": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1079,
        1094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "210": {
      "op": "SHL"
    },
    "211": {
      "op": "SUB"
    },
    "212": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "213": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 1
    },
    "214": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "215": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "218": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "219": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "221": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "222": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "226": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "228": {
      "op": "SHL"
    },
    "229": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "230": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "231": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "233": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "234": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "237": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "238": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AF"
    },
    "241": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "242": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "243": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "245": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "246": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "DUP1",
      "path": "0"
    },
    "247": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "248": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SUB",
      "path": "0"
    },
    "249": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "250": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "251": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1107,
        1129
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "254": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1145,
        1163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "256": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1145,
        1163
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "257": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "266": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "267": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "GT",
      "path": "2"
    },
    "268": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "269": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118"
    },
    "272": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "273": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x118"
    },
    "276": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5E4"
    },
    "279": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1132,
        1164
      ],
      "op": "JUMP",
      "path": "2"
    },
    "280": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "281": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "283": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "284": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "285": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP1",
      "path": "2"
    },
    "286": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "287": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "288": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP1",
      "path": "2"
    },
    "289": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "291": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "MUL",
      "path": "2"
    },
    "292": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "294": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "ADD",
      "path": "2"
    },
    "295": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "296": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "ADD",
      "path": "2"
    },
    "297": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "299": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "300": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP1",
      "path": "2"
    },
    "301": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "302": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x178"
    },
    "305": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "306": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "307": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "309": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "ADD",
      "path": "2"
    },
    "310": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "313": {
      "op": "DUP1"
    },
    "314": {
      "op": "MLOAD"
    },
    "315": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "317": {
      "op": "DUP2"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "op": "DUP3"
    },
    "320": {
      "op": "MSTORE"
    },
    "321": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "323": {
      "op": "DUP1"
    },
    "324": {
      "op": "DUP3"
    },
    "325": {
      "op": "MSTORE"
    },
    "326": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "328": {
      "op": "DUP1"
    },
    "329": {
      "op": "DUP4"
    },
    "330": {
      "op": "ADD"
    },
    "331": {
      "op": "DUP3"
    },
    "332": {
      "op": "SWAP1"
    },
    "333": {
      "op": "MSTORE"
    },
    "334": {
      "op": "SWAP3"
    },
    "335": {
      "op": "DUP3"
    },
    "336": {
      "op": "ADD"
    },
    "337": {
      "op": "DUP2"
    },
    "338": {
      "op": "SWAP1"
    },
    "339": {
      "op": "MSTORE"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "342": {
      "op": "DUP3"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "op": "DUP2"
    },
    "345": {
      "op": "SWAP1"
    },
    "346": {
      "op": "MSTORE"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "349": {
      "op": "DUP3"
    },
    "350": {
      "op": "ADD"
    },
    "351": {
      "op": "DUP2"
    },
    "352": {
      "op": "SWAP1"
    },
    "353": {
      "op": "MSTORE"
    },
    "354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "356": {
      "op": "DUP3"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "op": "MSTORE"
    },
    "359": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP3",
      "path": "2"
    },
    "360": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "363": {
      "op": "NOT"
    },
    "364": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "365": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "366": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "ADD",
      "path": "2"
    },
    "367": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "368": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "ADD",
      "path": "2"
    },
    "369": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "DUP2",
      "path": "2"
    },
    "370": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x136"
    },
    "373": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "374": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "375": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "POP",
      "path": "2"
    },
    "376": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "377": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1132,
        1164
      ],
      "op": "POP",
      "path": "2"
    },
    "378": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1107,
        1164
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "379": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1107,
        1164
      ],
      "op": "POP",
      "path": "2"
    },
    "380": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1179,
        1185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "382": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1174,
        1339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "383": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1195,
        1213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "385": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1195,
        1213
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "386": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1191,
        1192
      ],
      "op": "DUP2",
      "path": "2"
    },
    "387": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1191,
        1213
      ],
      "op": "LT",
      "path": "2"
    },
    "388": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1174,
        1339
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "389": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1174,
        1339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x245"
    },
    "392": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1174,
        1339
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "393": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1232,
        1258
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "395": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1281
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "397": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "399": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1289
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "401": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1290,
        1291
      ],
      "op": "DUP5",
      "path": "2"
    },
    "402": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "DUP2",
      "path": "2"
    },
    "403": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "404": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "DUP2",
      "path": "2"
    },
    "405": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "LT",
      "path": "2"
    },
    "406": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1"
    },
    "409": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "410": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A1"
    },
    "413": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FA"
    },
    "416": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1282,
        1292
      ],
      "op": "JUMP",
      "path": "2"
    },
    "417": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "418": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "420": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "421": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "DUP3",
      "path": "2"
    },
    "422": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "423": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "425": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "DUP1",
      "path": "2"
    },
    "426": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "DUP4",
      "path": "2"
    },
    "427": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "428": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "429": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "430": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "ADD",
      "path": "2"
    },
    "431": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1282,
        1292
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "432": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "DUP4",
      "path": "2"
    },
    "433": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "434": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "435": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "DUP2",
      "path": "2"
    },
    "436": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "ADD",
      "path": "2"
    },
    "437": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "438": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "439": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "440": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "441": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "443": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "444": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "DUP3",
      "path": "2"
    },
    "445": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "ADD",
      "path": "2"
    },
    "446": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "447": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "448": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 2
    },
    "449": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "450": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xC0"
    },
    "452": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "453": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "454": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "455": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "456": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "457": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "458": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "459": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "460": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "462": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP3",
      "path": "2"
    },
    "463": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "464": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "471": {
      "op": "SHL"
    },
    "472": {
      "op": "SUB"
    },
    "473": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "AND",
      "path": "2"
    },
    "474": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "475": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "476": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "477": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "478": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "479": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "480": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "481": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "483": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "484": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "485": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "486": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "487": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "488": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "489": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "490": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "491": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "492": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "493": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "495": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "496": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "497": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "498": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "500": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "AND",
      "path": "2"
    },
    "501": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "502": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "503": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "505": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "506": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "507": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "508": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "510": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "511": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "512": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "513": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "515": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "516": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "517": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "518": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "520": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "521": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "522": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "523": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "525": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP4",
      "path": "2"
    },
    "526": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "ADD",
      "path": "2"
    },
    "527": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "528": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "DUP5",
      "path": "2"
    },
    "529": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "530": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "531": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1261,
        1293
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "532": {
      "op": "POP"
    },
    "533": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1311
      ],
      "op": "DUP5",
      "path": "2"
    },
    "534": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1311
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "535": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1312,
        1313
      ],
      "op": "DUP5",
      "path": "2"
    },
    "536": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1312,
        1313
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "537": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "DUP2",
      "path": "2"
    },
    "538": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "LT",
      "path": "2"
    },
    "539": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x226"
    },
    "542": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "543": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x226"
    },
    "546": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FA"
    },
    "549": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1305,
        1314
      ],
      "op": "JUMP",
      "path": "2"
    },
    "550": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "551": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "553": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "MUL",
      "path": "2"
    },
    "554": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "556": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "ADD",
      "path": "2"
    },
    "557": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1314
      ],
      "op": "ADD",
      "path": "2"
    },
    "558": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "DUP2",
      "path": "2"
    },
    "559": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "560": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "561": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1305,
        1328
      ],
      "op": "POP",
      "path": "2"
    },
    "562": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1220,
        1339
      ],
      "op": "POP",
      "path": "2"
    },
    "563": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 3
    },
    "564": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "DUP1",
      "path": "2"
    },
    "565": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23D"
    },
    "568": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "569": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x610"
    },
    "572": {
      "fn": "CBorrow.getApplications",
      "jump": "i",
      "offset": [
        1215,
        1218
      ],
      "op": "JUMP",
      "path": "2"
    },
    "573": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "574": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "575": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "POP",
      "path": "2"
    },
    "576": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1215,
        1218
      ],
      "op": "POP",
      "path": "2"
    },
    "577": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1174,
        1339
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17E"
    },
    "580": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1174,
        1339
      ],
      "op": "JUMP",
      "path": "2"
    },
    "581": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1174,
        1339
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "582": {
      "op": "POP"
    },
    "583": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1355,
        1361
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 4
    },
    "584": {
      "op": "POP"
    },
    "585": {
      "fn": "CBorrow.getApplications",
      "offset": [
        1019,
        1368
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "586": {
      "fn": "CBorrow.getApplications",
      "jump": "o",
      "offset": [
        1019,
        1368
      ],
      "op": "JUMP",
      "path": "2"
    },
    "587": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "590": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "597": {
      "op": "SHL"
    },
    "598": {
      "op": "SUB"
    },
    "599": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "600": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "601": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "602": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x275"
    },
    "605": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "606": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "608": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "617": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "618": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "620": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "621": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "624": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "625": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AF"
    },
    "628": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "629": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "630": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x27F"
    },
    "633": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "635": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x474"
    },
    "638": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "639": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "640": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "641": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "644": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "645": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "652": {
      "op": "SHL"
    },
    "653": {
      "op": "SUB"
    },
    "654": {
      "op": "DUP5"
    },
    "655": {
      "op": "AND"
    },
    "656": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "658": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP3",
      "path": "2"
    },
    "659": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "ADD",
      "path": "2"
    },
    "660": {
      "op": "DUP2"
    },
    "661": {
      "op": "SWAP1"
    },
    "662": {
      "op": "MSTORE"
    },
    "663": {
      "op": "SWAP2"
    },
    "664": {
      "op": "DUP2"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "SWAP2"
    },
    "667": {
      "op": "SWAP1"
    },
    "668": {
      "op": "SWAP2"
    },
    "669": {
      "op": "MSTORE"
    },
    "670": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        798,
        813
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        744,
        754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "678": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        744,
        754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "679": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "684": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP1",
      "path": "2"
    },
    "685": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "688": {
      "op": "NOT"
    },
    "689": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP2",
      "path": "2"
    },
    "690": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP5",
      "path": "2"
    },
    "691": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "SUB",
      "path": "2"
    },
    "692": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "ADD",
      "path": "2"
    },
    "693": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP2",
      "path": "2"
    },
    "694": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "695": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP3",
      "path": "2"
    },
    "696": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "DUP3",
      "path": "2"
    },
    "697": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "698": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "DUP1",
      "path": "2"
    },
    "699": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "700": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        767,
        814
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "702": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "703": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "DUP3",
      "path": "2"
    },
    "704": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "ADD",
      "path": "2"
    },
    "705": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "706": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0xC0"
    },
    "708": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP5",
      "path": "2"
    },
    "709": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "710": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP4",
      "path": "2"
    },
    "711": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "712": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "713": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP5",
      "path": "2"
    },
    "714": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "721": {
      "op": "SHL"
    },
    "722": {
      "op": "SUB"
    },
    "723": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "724": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP9",
      "path": "2"
    },
    "725": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "AND",
      "path": "2"
    },
    "726": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP6",
      "path": "2"
    },
    "727": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP5",
      "path": "2"
    },
    "728": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "729": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "730": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "731": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "732": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP7",
      "path": "2"
    },
    "733": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP7",
      "path": "2"
    },
    "734": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "735": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP10",
      "path": "2"
    },
    "736": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "737": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "740": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "742": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP10",
      "path": "2"
    },
    "743": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "744": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "745": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "746": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "747": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        889,
        904
      ],
      "op": "TIMESTAMP",
      "path": "2"
    },
    "748": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "750": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP12",
      "path": "2"
    },
    "751": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "752": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "753": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "754": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "755": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        906,
        907
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "757": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xA0"
    },
    "759": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP13",
      "path": "2"
    },
    "760": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "761": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "762": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "763": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "764": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "DUP10",
      "path": "2"
    },
    "765": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "DUP6",
      "path": "2"
    },
    "766": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "767": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "769": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "770": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "DUP12",
      "path": "2"
    },
    "771": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "772": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "773": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "SWAP11",
      "path": "2"
    },
    "774": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "DUP5",
      "path": "2"
    },
    "775": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        850
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "776": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP12",
      "path": "2"
    },
    "777": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "778": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP13",
      "path": "2"
    },
    "779": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "780": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "781": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "782": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "784": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP13",
      "path": "2"
    },
    "785": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP2",
      "path": "2"
    },
    "786": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "787": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "788": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "789": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "790": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "791": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP10",
      "path": "2"
    },
    "792": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "AND",
      "path": "2"
    },
    "793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "op": "SUB"
    },
    "801": {
      "op": "NOT"
    },
    "802": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "803": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP4",
      "path": "2"
    },
    "804": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "AND",
      "path": "2"
    },
    "805": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "OR",
      "path": "2"
    },
    "806": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "807": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "808": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "809": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "810": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "811": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "812": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP12",
      "path": "2"
    },
    "813": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "814": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "815": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "816": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP9",
      "path": "2"
    },
    "817": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "818": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "819": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "820": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP10",
      "path": "2"
    },
    "821": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "822": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "823": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "824": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "825": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "826": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "829": {
      "op": "NOT"
    },
    "830": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "831": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "832": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "AND",
      "path": "2"
    },
    "833": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "834": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "835": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "836": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "OR",
      "path": "2"
    },
    "837": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "838": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "839": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "840": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "841": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "842": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "844": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP1",
      "path": "2"
    },
    "845": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP10",
      "path": "2"
    },
    "846": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "847": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "848": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "849": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "850": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "851": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "852": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "853": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "855": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SWAP8",
      "path": "2"
    },
    "856": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "DUP9",
      "path": "2"
    },
    "857": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "ADD",
      "path": "2"
    },
    "858": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        826,
        908
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "859": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 7
    },
    "860": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "861": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "DUP1",
      "path": "2"
    },
    "862": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "DUP5",
      "path": "2"
    },
    "863": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "ADD",
      "path": "2"
    },
    "864": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "865": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP7",
      "path": "2"
    },
    "866": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "867": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "900": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "901": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP6",
      "path": "2"
    },
    "902": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "ADD",
      "path": "2"
    },
    "903": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "DUP1",
      "path": "2"
    },
    "904": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "905": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "906": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "907": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "AND",
      "path": "2"
    },
    "908": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "OR",
      "path": "2"
    },
    "909": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "910": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "911": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        919,
        947
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "912": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 8
    },
    "913": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "914": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "DUP1",
      "path": "2"
    },
    "915": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "916": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "ADD",
      "path": "2"
    },
    "917": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "DUP6",
      "path": "2"
    },
    "918": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "919": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "920": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "921": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "922": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0"
    },
    "955": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "956": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "957": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "ADD",
      "path": "2"
    },
    "958": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "DUP4",
      "path": "2"
    },
    "959": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "960": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        958,
        974
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "961": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 9
    },
    "962": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "963": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "964": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        757,
        815
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        853,
        908
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "967": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3CF"
    },
    "970": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "DUP4",
      "path": "2"
    },
    "971": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x610"
    },
    "974": {
      "fn": "CBorrow.applyForCredit",
      "jump": "i",
      "offset": [
        985,
        1005
      ],
      "op": "JUMP",
      "path": "2"
    },
    "975": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "976": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "977": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "978": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "POP",
      "path": "2"
    },
    "979": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "980": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        985,
        1005
      ],
      "op": "POP",
      "path": "2"
    },
    "981": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        733,
        1012
      ],
      "op": "POP",
      "path": "2"
    },
    "982": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "POP",
      "path": "2"
    },
    "983": {
      "fn": "CBorrow.applyForCredit",
      "offset": [
        666,
        1012
      ],
      "op": "POP",
      "path": "2"
    },
    "984": {
      "fn": "CBorrow.applyForCredit",
      "jump": "o",
      "offset": [
        666,
        1012
      ],
      "op": "JUMP",
      "path": "2"
    },
    "985": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "986": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "988": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "995": {
      "op": "SHL"
    },
    "996": {
      "op": "SUB"
    },
    "997": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "998": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "1"
    },
    "999": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1000": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x403"
    },
    "1003": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1004": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1006": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1007": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1013": {
      "op": "SHL"
    },
    "1014": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1015": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1016": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1018": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1019": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "1022": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1023": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5AF"
    },
    "1026": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1027": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1034": {
      "op": "SHL"
    },
    "1035": {
      "op": "SUB"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 10
    },
    "1037": {
      "branch": 14,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "1038": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x468"
    },
    "1041": {
      "branch": 14,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1053": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1056": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1063": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1065": {
      "op": "DUP3"
    },
    "1066": {
      "op": "ADD"
    },
    "1067": {
      "op": "MSTORE"
    },
    "1068": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1101": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1103": {
      "op": "DUP3"
    },
    "1104": {
      "op": "ADD"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1115": {
      "op": "SHL"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1118": {
      "op": "DUP3"
    },
    "1119": {
      "op": "ADD"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1123": {
      "op": "ADD"
    },
    "1124": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF2"
    },
    "1127": {
      "op": "JUMP"
    },
    "1128": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1129": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x471"
    },
    "1132": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1133": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x474"
    },
    "1136": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1137": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1138": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "1139": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1140": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1141": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1143": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1144": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1145": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1151": {
      "op": "SHL"
    },
    "1152": {
      "op": "SUB"
    },
    "1153": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 12
    },
    "1154": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1155": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1162": {
      "op": "SHL"
    },
    "1163": {
      "op": "SUB"
    },
    "1164": {
      "op": "NOT"
    },
    "1165": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1166": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "1167": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1168": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "1169": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1170": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1171": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "1173": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1174": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1175": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1176": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1177": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "1178": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1179": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1180": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1181": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1214": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1215": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1216": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1217": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1218": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "1219": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1220": {
      "op": "JUMPDEST"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1223": {
      "op": "DUP1"
    },
    "1224": {
      "op": "DUP3"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "DUP3"
    },
    "1227": {
      "op": "MLOAD"
    },
    "1228": {
      "op": "DUP3"
    },
    "1229": {
      "op": "DUP3"
    },
    "1230": {
      "op": "ADD"
    },
    "1231": {
      "op": "DUP2"
    },
    "1232": {
      "op": "SWAP1"
    },
    "1233": {
      "op": "MSTORE"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1236": {
      "op": "SWAP2"
    },
    "1237": {
      "op": "SWAP1"
    },
    "1238": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1240": {
      "op": "SWAP1"
    },
    "1241": {
      "op": "DUP2"
    },
    "1242": {
      "op": "DUP6"
    },
    "1243": {
      "op": "ADD"
    },
    "1244": {
      "op": "SWAP1"
    },
    "1245": {
      "op": "DUP7"
    },
    "1246": {
      "op": "DUP5"
    },
    "1247": {
      "op": "ADD"
    },
    "1248": {
      "op": "DUP6"
    },
    "1249": {
      "op": "JUMPDEST"
    },
    "1250": {
      "op": "DUP3"
    },
    "1251": {
      "op": "DUP2"
    },
    "1252": {
      "op": "LT"
    },
    "1253": {
      "op": "ISZERO"
    },
    "1254": {
      "op": "PUSH2",
      "value": "0x53A"
    },
    "1257": {
      "op": "JUMPI"
    },
    "1258": {
      "op": "DUP2"
    },
    "1259": {
      "op": "MLOAD"
    },
    "1260": {
      "op": "DUP1"
    },
    "1261": {
      "op": "MLOAD"
    },
    "1262": {
      "op": "DUP6"
    },
    "1263": {
      "op": "MSTORE"
    },
    "1264": {
      "op": "DUP7"
    },
    "1265": {
      "op": "DUP2"
    },
    "1266": {
      "op": "ADD"
    },
    "1267": {
      "op": "MLOAD"
    },
    "1268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1274": {
      "op": "SHL"
    },
    "1275": {
      "op": "SUB"
    },
    "1276": {
      "op": "AND"
    },
    "1277": {
      "op": "DUP8"
    },
    "1278": {
      "op": "DUP7"
    },
    "1279": {
      "op": "ADD"
    },
    "1280": {
      "op": "MSTORE"
    },
    "1281": {
      "op": "DUP6"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "op": "MLOAD"
    },
    "1285": {
      "op": "DUP7"
    },
    "1286": {
      "op": "DUP7"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "op": "MSTORE"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1291": {
      "op": "DUP1"
    },
    "1292": {
      "op": "DUP3"
    },
    "1293": {
      "op": "ADD"
    },
    "1294": {
      "op": "MLOAD"
    },
    "1295": {
      "op": "ISZERO"
    },
    "1296": {
      "op": "ISZERO"
    },
    "1297": {
      "op": "SWAP1"
    },
    "1298": {
      "op": "DUP7"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "MSTORE"
    },
    "1301": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1303": {
      "op": "DUP1"
    },
    "1304": {
      "op": "DUP3"
    },
    "1305": {
      "op": "ADD"
    },
    "1306": {
      "op": "MLOAD"
    },
    "1307": {
      "op": "SWAP1"
    },
    "1308": {
      "op": "DUP7"
    },
    "1309": {
      "op": "ADD"
    },
    "1310": {
      "op": "MSTORE"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1313": {
      "op": "SWAP1"
    },
    "1314": {
      "op": "DUP2"
    },
    "1315": {
      "op": "ADD"
    },
    "1316": {
      "op": "MLOAD"
    },
    "1317": {
      "op": "SWAP1"
    },
    "1318": {
      "op": "DUP6"
    },
    "1319": {
      "op": "ADD"
    },
    "1320": {
      "op": "MSTORE"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1323": {
      "op": "SWAP1"
    },
    "1324": {
      "op": "SWAP4"
    },
    "1325": {
      "op": "ADD"
    },
    "1326": {
      "op": "SWAP3"
    },
    "1327": {
      "op": "SWAP1"
    },
    "1328": {
      "op": "DUP6"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "op": "SWAP1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "ADD"
    },
    "1334": {
      "op": "PUSH2",
      "value": "0x4E1"
    },
    "1337": {
      "op": "JUMP"
    },
    "1338": {
      "op": "JUMPDEST"
    },
    "1339": {
      "op": "POP"
    },
    "1340": {
      "op": "SWAP2"
    },
    "1341": {
      "op": "SWAP8"
    },
    "1342": {
      "op": "SWAP7"
    },
    "1343": {
      "op": "POP"
    },
    "1344": {
      "op": "POP"
    },
    "1345": {
      "op": "POP"
    },
    "1346": {
      "op": "POP"
    },
    "1347": {
      "op": "POP"
    },
    "1348": {
      "op": "POP"
    },
    "1349": {
      "op": "POP"
    },
    "1350": {
      "jump": "o",
      "op": "JUMP"
    },
    "1351": {
      "op": "JUMPDEST"
    },
    "1352": {
      "op": "DUP1"
    },
    "1353": {
      "op": "CALLDATALOAD"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1360": {
      "op": "SHL"
    },
    "1361": {
      "op": "SUB"
    },
    "1362": {
      "op": "DUP2"
    },
    "1363": {
      "op": "AND"
    },
    "1364": {
      "op": "DUP2"
    },
    "1365": {
      "op": "EQ"
    },
    "1366": {
      "op": "PUSH2",
      "value": "0x55E"
    },
    "1369": {
      "op": "JUMPI"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1372": {
      "op": "DUP1"
    },
    "1373": {
      "op": "REVERT"
    },
    "1374": {
      "op": "JUMPDEST"
    },
    "1375": {
      "op": "SWAP2"
    },
    "1376": {
      "op": "SWAP1"
    },
    "1377": {
      "op": "POP"
    },
    "1378": {
      "jump": "o",
      "op": "JUMP"
    },
    "1379": {
      "op": "JUMPDEST"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1382": {
      "op": "DUP1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1385": {
      "op": "DUP4"
    },
    "1386": {
      "op": "DUP6"
    },
    "1387": {
      "op": "SUB"
    },
    "1388": {
      "op": "SLT"
    },
    "1389": {
      "op": "ISZERO"
    },
    "1390": {
      "op": "PUSH2",
      "value": "0x576"
    },
    "1393": {
      "op": "JUMPI"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1396": {
      "op": "DUP1"
    },
    "1397": {
      "op": "REVERT"
    },
    "1398": {
      "op": "JUMPDEST"
    },
    "1399": {
      "op": "PUSH2",
      "value": "0x57F"
    },
    "1402": {
      "op": "DUP4"
    },
    "1403": {
      "op": "PUSH2",
      "value": "0x547"
    },
    "1406": {
      "jump": "i",
      "op": "JUMP"
    },
    "1407": {
      "op": "JUMPDEST"
    },
    "1408": {
      "op": "SWAP5"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1411": {
      "op": "SWAP4"
    },
    "1412": {
      "op": "SWAP1"
    },
    "1413": {
      "op": "SWAP4"
    },
    "1414": {
      "op": "ADD"
    },
    "1415": {
      "op": "CALLDATALOAD"
    },
    "1416": {
      "op": "SWAP4"
    },
    "1417": {
      "op": "POP"
    },
    "1418": {
      "op": "POP"
    },
    "1419": {
      "op": "POP"
    },
    "1420": {
      "jump": "o",
      "op": "JUMP"
    },
    "1421": {
      "op": "JUMPDEST"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1426": {
      "op": "DUP3"
    },
    "1427": {
      "op": "DUP5"
    },
    "1428": {
      "op": "SUB"
    },
    "1429": {
      "op": "SLT"
    },
    "1430": {
      "op": "ISZERO"
    },
    "1431": {
      "op": "PUSH2",
      "value": "0x59F"
    },
    "1434": {
      "op": "JUMPI"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1437": {
      "op": "DUP1"
    },
    "1438": {
      "op": "REVERT"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "PUSH2",
      "value": "0x5A8"
    },
    "1443": {
      "op": "DUP3"
    },
    "1444": {
      "op": "PUSH2",
      "value": "0x547"
    },
    "1447": {
      "jump": "i",
      "op": "JUMP"
    },
    "1448": {
      "op": "JUMPDEST"
    },
    "1449": {
      "op": "SWAP4"
    },
    "1450": {
      "op": "SWAP3"
    },
    "1451": {
      "op": "POP"
    },
    "1452": {
      "op": "POP"
    },
    "1453": {
      "op": "POP"
    },
    "1454": {
      "jump": "o",
      "op": "JUMP"
    },
    "1455": {
      "op": "JUMPDEST"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1458": {
      "op": "DUP1"
    },
    "1459": {
      "op": "DUP3"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "DUP2"
    },
    "1462": {
      "op": "DUP2"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1500": {
      "op": "DUP3"
    },
    "1501": {
      "op": "ADD"
    },
    "1502": {
      "op": "MSTORE"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "SWAP1"
    },
    "1507": {
      "jump": "o",
      "op": "JUMP"
    },
    "1508": {
      "op": "JUMPDEST"
    },
    "1509": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1524": {
      "op": "MSTORE"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1529": {
      "op": "REVERT"
    },
    "1530": {
      "op": "JUMPDEST"
    },
    "1531": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1538": {
      "op": "SHL"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1541": {
      "op": "MSTORE"
    },
    "1542": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1544": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1546": {
      "op": "MSTORE"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1551": {
      "op": "REVERT"
    },
    "1552": {
      "op": "JUMPDEST"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1557": {
      "op": "NOT"
    },
    "1558": {
      "op": "DUP3"
    },
    "1559": {
      "op": "EQ"
    },
    "1560": {
      "op": "ISZERO"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x632"
    },
    "1564": {
      "op": "JUMPI"
    },
    "1565": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1570": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1572": {
      "op": "SHL"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1575": {
      "op": "MSTORE"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1585": {
      "op": "REVERT"
    },
    "1586": {
      "op": "JUMPDEST"
    },
    "1587": {
      "op": "POP"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "SWAP1"
    },
    "1592": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6b4b5d66e5b98bf52bb77bd2e296ff7028e41760",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.10;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\ncontract CBorrow is Ownable{\n\n    struct Credit {\n        bytes32 id;\n        address borrower;\n        uint256 amount;\n        bool confirmed;\n        uint256 timestamp;\n        uint duration_in_month;\n    }\n\n    uint private applications_count = 0;\n\n    mapping(bytes32 => Credit) private borrower_application;\n    \n    mapping(address => uint) private applications;\n    address[] private all_borrowers;\n    bytes32[] private all_ids;\n\n    mapping(address => uint) private borrower_confirmed_amount;\n    \n\n    // Function to get the current count\n    function applyForCredit(address borrower, uint256 amount) external {\n         bytes32 id = keccak256(abi.encode(borrower, borrower, block.timestamp));\n         borrower_application[id] = Credit(id, borrower, amount, false, block.timestamp, 3);\n         all_borrowers.push(borrower);\n         all_ids.push(id);\n         applications_count++;\n    }\n\n\n    function getApplications() external onlyOwner view returns (Credit[] memory)  {\n        Credit[] memory c_list = new Credit[](applications_count);\n        for (uint i = 0; i < applications_count; i++) {\n          Credit storage application = borrower_application[all_ids[i]];\n          c_list[i] = application;\n        }\n        return c_list;\n    }\n}",
  "sourceMap": "113:1257:2:-:0;;;361:1;327:35;;113:1257;;;;;;;;;-1:-1:-1;867:23:0;665:10:1;867:9:0;:23::i;:::-;113:1257:2;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;113:1257:2:-;;;;;;;",
  "sourcePath": "contracts/CBorrow.sol",
  "type": "contract"
}